{"docstore/metadata": {"3bb937be-2ba1-4a21-ba30-be6d16dfb84d": {"doc_hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592"}, "01bfb9ad-c667-4680-84f9-1eb128dea9a9": {"doc_hash": "f4e8405896aa894672528e85ea2a2394c0e8813d5481a1529576f2f5409e3edd", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "5f6ce9ad-4135-4a35-a12b-b985c9f354da": {"doc_hash": "9a4699da80e7193e8d8ecbcfc727ba87874b95acc350a283e0ca878fe745475e", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "b7394295-f2e6-447b-b535-c8a627109c45": {"doc_hash": "d83fc539f66768b848d1398b0818fc8bb7485dac2dd274b94a566c8d4919403f", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755": {"doc_hash": "50cbb65e76fff72fc55b7e891d154d171141d2250d9a4a4e0ed88d8c06aa9f32", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "40d95983-9910-460e-aa69-099078e0ab7c": {"doc_hash": "d19c6910a8d32c6789b06300562db5b84fe7505391db12e1087b45819cee8c49", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "5b86cf84-e7f7-41cc-8914-f868005e903d": {"doc_hash": "7db48dffe0f3066489d7e56de383889c9d8d38e7af78c854282fa8c9d55dee2d", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "e5a6e676-fbb3-4115-8e38-27a0ac75fac8": {"doc_hash": "6e88594f8fd6a765395fb0c3b80057d754ccce84b4225395a2fc0ef9496fcc04", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "3c6100cd-4c1e-41ee-bc5f-25908cf18760": {"doc_hash": "b0eafeda367b0ffaec0c8841f89d2ef75d9351f8785adf67ba5d57761a268de2", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "3992ecaa-3006-49ad-b12b-8c01079db628": {"doc_hash": "87f29c62b0d97f6067b7b73c0dd78599dd27188d74a78a23a68193e1760a5207", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "9b303a00-78dc-4162-a234-9008b27ebdf5": {"doc_hash": "3c77f87b7065e5ade2042e817be0e4b4942188a8639ac8eaa652ba1fbf65b6cf", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705": {"doc_hash": "ddbdb61cdbdf8d026bbd05602bcceb43d66826cfab12d36e52957bc981fa1474", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec": {"doc_hash": "f3dcf87d5c43461fe34742a3464e8505881163de495f212453345930c17a0b3e", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "db4f8216-3804-4266-99f6-36cc1e54d52a": {"doc_hash": "168163ee86d7a474a5874148fda55ad8137e3e61fb42a2ef397457d7b7a2cc93", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "a1042b26-a6ac-488e-84af-572128d72d73": {"doc_hash": "7ee44a899f21b0840d6895a58c4c7fc2e375f3889e42a39afd4e8feb60649119", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "deef8052-e42a-4634-8e42-bc054b178309": {"doc_hash": "496511960f40b3d1bd94540b9c495c7c380fd698eb8ec78d37592ee38219263e", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "41611e49-96bf-484d-8cd4-1c1d3070c617": {"doc_hash": "d376989fcaf72376824f9ec9fd02cec503ee816fb16b62388423eab814b79f91", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "575654eb-82f6-4849-b9d2-f4fef51e28b6": {"doc_hash": "5c69945368fab6555c64f667b524346a47f783b38836b2ceb50e3f69856cec72", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "50b7359f-99e4-459e-ae17-3a229808ea86": {"doc_hash": "29fcf880d346816f4ef9de8161caff77f0f8477705beaa305da64634802ed0c0", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "ed34c44d-6205-457b-829d-6501b4bd604a": {"doc_hash": "4e261e70feaeb61c37f35ba4efef62e278ff665667a5f160089beff6fc1bd104", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "a668ebf0-43ea-498f-be1c-ec545f571191": {"doc_hash": "348e54890fbc6c9d5b8eef43aca63332784fde8417869b671d2aa8a4a78da9dc", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "45e357dd-66ac-4221-a6e6-16afb959138e": {"doc_hash": "56938316dc781ef3d3f4de29582ec907d184cfb9a025be696537c594e386beb7", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "79c18bf9-7be8-4c89-8580-8873d5ce5d47": {"doc_hash": "93fb10ce93a71dc9c7887363494250427c968e0f4e0756eebc7103ef332aa3bc", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "5c1a3dce-48ee-484c-9e3f-936fb6bbc530": {"doc_hash": "0c85f2b2f8538900d57744877e57c2c00abb43a4824064832b75ea46eb62ca16", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "7dc97500-76c2-4e3b-8404-7ed09c9abd21": {"doc_hash": "5fef4196f0f9f86fa957814c2d5788cca4c620e4b7d026e69579d37d8f152f2b", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "021f2e40-b5bd-412a-9075-1039603c74ac": {"doc_hash": "d37c032224e9dd5138c3a5e422774323a63a36a42f0f425f2dc0dc98937b3fff", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "a9461ee6-b4c8-4914-8892-ffc28f1efa87": {"doc_hash": "5a221eabc9d1d78dc3016e6129776d5a2228df5a76b578295668a6dbe0e772c7", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "1cad97ae-c532-4819-ac46-77a64c6fc9ba": {"doc_hash": "1345d76e928727a47df9577fa68614610e50d696a3d5dfc692125be5027925b7", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "779a4091-94ef-4ab8-9a55-a11d68d6d34f": {"doc_hash": "63116278a816259528b90f529c48bcd72de3aeb2e9e85eed6d7a147aaa11d880", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b": {"doc_hash": "22b117cd45d915f8c751b69ec6e75c2048c644c5b1839ed0ab091776b3127cf6", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e": {"doc_hash": "3207226343aa6ae25bfbba8048ae7ef36581343bccb34a26ba838f24650101b8", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd": {"doc_hash": "40ac109e59e982c95e8f6a45d90222c3d6e33e2b081744ba5d5aa00cb414f5df", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "4000d400-2c86-4931-8753-0de5d7940f03": {"doc_hash": "343e2b691b5cd44ad5ca5d54da33332b1533cf9ea573e51c7f44b59ccbf2ee47", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1": {"doc_hash": "cc047a3dd6f5675222a469e1ce0e8481131bbcb030a3ee4c1dbdd15c64df0283", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c": {"doc_hash": "b2e634b074df222c59a62837c95271bda984dabf87c6bedd511401b23ab92bb9", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "32fc4b5d-22c4-4106-8b52-a097d90726e4": {"doc_hash": "f7fa478c16006d06df4bdd8c9d3bcda1622e9cd68dfb300952bfc2716c660997", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "f88d9687-896b-42d6-a429-4ffe2a0e16b5": {"doc_hash": "ddaee7a1d7859ec7321ba71ba8588ae85854c128c0f10ce18ab29185d99bcc6e", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "14aa3228-86a7-4e9c-805f-59cb93f8a5b3": {"doc_hash": "f0fea035d504139ccc9c5d25c6bbef87ac8c3575dd02d227322f5db3d49dc55f", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "36befdc9-7ed7-4c70-a2b1-9803ec49b625": {"doc_hash": "09167eb6ee6bc567284e2bf28ead19d1b90995669a2b6b5754bf94bd929caaed", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "64ab280d-94bb-4961-8a97-3989da18abb4": {"doc_hash": "f3edf0897b9fa0756c0f07e305fdf6325b6a8dea1fd519b07d875ac7040f889f", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "6b0730c2-b62b-4ab2-abde-d71579a1c70c": {"doc_hash": "a580a8324dba64c4ede6656176547f05d95233c6cdaccf9b81d822cd9e022fb2", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "c3e2b51b-992e-477f-bf0e-a1e156a9a608": {"doc_hash": "f397e6f8ec6f5530c6c0ae9beba4e4a045d34253cf0fa88279cf87684d23390b", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "7c9eba51-e4d3-490a-844d-c85337f46fdb": {"doc_hash": "5117e234abbea480a182f823b7f1e85394ae74dd732aba9a847c18bac6997dc1", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "a012c734-0d63-42ab-8c52-cfa9788c168b": {"doc_hash": "9a6c701b10b7071d1da758f73ffd893190bb0d164a7d5d054507440215f258b9", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "bccc5b86-5791-4799-9085-afabf787c01f": {"doc_hash": "8deeafb1160b70c3905ecd4fb5f5b84455b6e8767867f2b26a7561a04fba7d2e", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "9dd2ad97-5276-48be-9a6a-182576fd0ecf": {"doc_hash": "31ec4e967f593dbe940bed70b9ef9fab330e43eefd1393ef7363d42dd87a8b82", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "75a84c79-fd3c-493a-8899-331e811e5789": {"doc_hash": "d90362543e1457fc90929309d812df4cbf2e024e89e2b74c3ec0ea39b406fdde", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "5a3db896-ddcd-4aec-9a4a-b2335299fcef": {"doc_hash": "c52dcb852d98e892e05652740c1927dea6747c63de790d95ff70b4955652b774", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}, "5d53d9c8-456e-4c02-8955-40a5e6ef90d5": {"doc_hash": "7efbcf0a07fbe601c4eca36c1db46a2bbce80111581e4d19c11fcb1396adb711", "ref_doc_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d"}}, "docstore/data": {"01bfb9ad-c667-4680-84f9-1eb128dea9a9": {"__data__": {"id_": "01bfb9ad-c667-4680-84f9-1eb128dea9a9", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f6ce9ad-4135-4a35-a12b-b985c9f354da", "node_type": "1", "metadata": {}, "hash": "9a4699da80e7193e8d8ecbcfc727ba87874b95acc350a283e0ca878fe745475e", "class_name": "RelatedNodeInfo"}}, "hash": "f4e8405896aa894672528e85ea2a2394c0e8813d5481a1529576f2f5409e3edd", "text": "In the following sections, all BasePOD network configurations will be described step-by-step. As an example, all the commands and configuration verifications will be shown on `leaf01`. \n\n**Note:** Some configuration steps don\u2019t have verification `show` commands as they are prerequisites for other configurations that will be covered in later sections.\n\nFor complete configuration, check out the running-configuration of each leaf switch using `nv config show` or `nv config show -o commands`. You can also view the `startup.yaml` file to check the switch startup-configuration.\n```bash\nnv config show\nnv config show -o commands\ncat /etc/nvue.d/startup.yaml\n```\n\n## IP addressing  \n\nAs mentioned, the E/W network is a pure layer 3 network with p2p (/31) IPv4 addresses between the GPU NICs and the switches. Each GPU-switch port is a separate subnet but from a single supernet. All switch ports connected to GPU NICs are breakout x4.\n```bash\nnv set interface swp1s0 ip address 10.1.1.1/31\nnv set interface swp1s1 ip address 10.1.1.5/31\nnv set interface swp1s2 ip address 10.1.1.9/31\nnv set interface swp1s3 ip address 10.1.1.13/31\nnv set interface swp2s0 ip address 10.1.1.17/31\nnv set interface swp2s1 ip address 10.1.1.21/31\n...\nnv set interface swp4s2 ip address 10.1.1.57/31\nnv set interface swp4s3 ip address 10.1.1.61/31\n```\n\nThe inter-switch ports are router ports with a different p2p (`/31`) subnet each. But from a different supernet than the compute network GPU ports.", "start_char_idx": 2, "end_char_idx": 1481, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f6ce9ad-4135-4a35-a12b-b985c9f354da": {"__data__": {"id_": "5f6ce9ad-4135-4a35-a12b-b985c9f354da", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "01bfb9ad-c667-4680-84f9-1eb128dea9a9", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f4e8405896aa894672528e85ea2a2394c0e8813d5481a1529576f2f5409e3edd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7394295-f2e6-447b-b535-c8a627109c45", "node_type": "1", "metadata": {}, "hash": "d83fc539f66768b848d1398b0818fc8bb7485dac2dd274b94a566c8d4919403f", "class_name": "RelatedNodeInfo"}}, "hash": "9a4699da80e7193e8d8ecbcfc727ba87874b95acc350a283e0ca878fe745475e", "text": "But from a different supernet than the compute network GPU ports. \n```bash\nnv set interface swp61 ip address 172.16.1.28/31\nnv set interface swp62 ip address 172.16.1.30/31\nnv set interface swp63 ip address 172.16.1.32/31\nnv set interface swp64 ip address 172.16.1.34/31\n```\n\nThe N/S network is a layer 2 network, but for the nodes within it to be able to communicate with the outside world (data center), we enable layer 3 VLAN interfaces ([SVI](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-2/Ethernet-Bridging-VLANs/VLAN-aware-Bridge-Mode/#vlan-layer-3-addressing)) that will later be used for VRR instances.\n\n```bash\nnv set interface vlan121 ip address 10.130.121.2/24\nnv set interface vlan122 ip address 10.130.122.2/24\n```\n\nEach SN5600 switch has ports to the two IPMI and two edge switches. All those ports are router ports within different subnets. Later, we will establish BGP neighborships on those ports.\n\nTo IPMI switches:\n```bash\nnv set interface swp29s0 ip address 10.150.0.0/31\nnv set interface swp29s1 ip address 10.150.0.2/31\n```\n\nTo edge switches:\n```bash\nnv set interface swp45 ip address 10.140.0.0/31\nnv set interface swp46 ip address 10.140.0.2/31\n```\n**Note:** In the demo, we assume p2p (/31) addresses the edge switches, but it depends on the existing data center network.\n\nFinally, we have the loopback addresses of each switch.\n```bash\nnv set interface lo ip address 10.10.10.", "start_char_idx": 1416, "end_char_idx": 2846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b7394295-f2e6-447b-b535-c8a627109c45": {"__data__": {"id_": "b7394295-f2e6-447b-b535-c8a627109c45", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f6ce9ad-4135-4a35-a12b-b985c9f354da", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "9a4699da80e7193e8d8ecbcfc727ba87874b95acc350a283e0ca878fe745475e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755", "node_type": "1", "metadata": {}, "hash": "50cbb65e76fff72fc55b7e891d154d171141d2250d9a4a4e0ed88d8c06aa9f32", "class_name": "RelatedNodeInfo"}}, "hash": "d83fc539f66768b848d1398b0818fc8bb7485dac2dd274b94a566c8d4919403f", "text": "All those ports are router ports within different subnets. Later, we will establish BGP neighborships on those ports.\n\nTo IPMI switches:\n```bash\nnv set interface swp29s0 ip address 10.150.0.0/31\nnv set interface swp29s1 ip address 10.150.0.2/31\n```\n\nTo edge switches:\n```bash\nnv set interface swp45 ip address 10.140.0.0/31\nnv set interface swp46 ip address 10.140.0.2/31\n```\n**Note:** In the demo, we assume p2p (/31) addresses the edge switches, but it depends on the existing data center network.\n\nFinally, we have the loopback addresses of each switch.\n```bash\nnv set interface lo ip address 10.10.10.1/32\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show interface | grep 10\nlo              up            65536  loopback                                      IP Address:                10.10.10.1/32\nswp1s0          up     1G     9216   swp       dgx01            48:b0:2d:b3:64:4e  IP Address:                  10.1.1.1/31\nswp1s1          up     1G     9216   swp       dgx01            48:b0:2d:13:ba:25  IP Address:                  10.1.1.5/31\nswp1s2          up     1G     9216   swp       dgx01            48:b0:2d:48:8b:a9  IP Address:                  10.1.1.9/31\nswp1s3          up     1G     9216   swp       dgx01            48:b0:2d:3d:d5:ec  IP Address:                 10.1.1.", "start_char_idx": 2241, "end_char_idx": 3557, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755": {"__data__": {"id_": "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7394295-f2e6-447b-b535-c8a627109c45", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "d83fc539f66768b848d1398b0818fc8bb7485dac2dd274b94a566c8d4919403f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40d95983-9910-460e-aa69-099078e0ab7c", "node_type": "1", "metadata": {}, "hash": "d19c6910a8d32c6789b06300562db5b84fe7505391db12e1087b45819cee8c49", "class_name": "RelatedNodeInfo"}}, "hash": "50cbb65e76fff72fc55b7e891d154d171141d2250d9a4a4e0ed88d8c06aa9f32", "text": "1.1.1/31\nswp1s1          up     1G     9216   swp       dgx01            48:b0:2d:13:ba:25  IP Address:                  10.1.1.5/31\nswp1s2          up     1G     9216   swp       dgx01            48:b0:2d:48:8b:a9  IP Address:                  10.1.1.9/31\nswp1s3          up     1G     9216   swp       dgx01            48:b0:2d:3d:d5:ec  IP Address:                 10.1.1.13/31\nswp2s0          up     1G     9216   swp       dgx02            48:b0:2d:d5:ba:12  IP Address:                 10.1.1.17/31\nswp2s1          up     1G     9216   swp       dgx02            48:b0:2d:17:6e:28  IP Address:                 10.1.1.21/31\nswp2s2          up     1G     9216   swp       dgx02            48:b0:2d:ab:5e:aa  IP Address:                 10.1.1.25/31\nswp2s3          up     1G     9216   swp       dgx02            48:b0:2d:af:ab:a4  IP Address:                 10.1.1.29/31\nswp3s0          up     1G     9216   swp       dgx03            48:b0:2d:59:51:f4  IP Address:                 10.1.1.33/31\nswp3s1          up     1G     9216   swp       dgx03            48:b0:2d:03:dc:4b  IP Address:                 10.", "start_char_idx": 3182, "end_char_idx": 4297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40d95983-9910-460e-aa69-099078e0ab7c": {"__data__": {"id_": "40d95983-9910-460e-aa69-099078e0ab7c", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "50cbb65e76fff72fc55b7e891d154d171141d2250d9a4a4e0ed88d8c06aa9f32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5b86cf84-e7f7-41cc-8914-f868005e903d", "node_type": "1", "metadata": {}, "hash": "7db48dffe0f3066489d7e56de383889c9d8d38e7af78c854282fa8c9d55dee2d", "class_name": "RelatedNodeInfo"}}, "hash": "d19c6910a8d32c6789b06300562db5b84fe7505391db12e1087b45819cee8c49", "text": "1.1.25/31\nswp2s3          up     1G     9216   swp       dgx02            48:b0:2d:af:ab:a4  IP Address:                 10.1.1.29/31\nswp3s0          up     1G     9216   swp       dgx03            48:b0:2d:59:51:f4  IP Address:                 10.1.1.33/31\nswp3s1          up     1G     9216   swp       dgx03            48:b0:2d:03:dc:4b  IP Address:                 10.1.1.37/31\nswp3s2          up     1G     9216   swp       dgx03            48:b0:2d:aa:1c:ef  IP Address:                 10.1.1.41/31\nswp3s3          up     1G     9216   swp       dgx03            48:b0:2d:76:59:30  IP Address:                 10.1.1.45/31\nswp4s0          up     1G     9216   swp       dgx04            48:b0:2d:45:55:a2  IP Address:                 10.1.1.49/31\nswp4s1          up     1G     9216   swp       dgx04            48:b0:2d:41:72:fe  IP Address:                 10.1.1.53/31\nswp4s2          up     1G     9216   swp       dgx04            48:b0:2d:27:eb:9d  IP Address:                 10.1.1.57/31\nswp4s3          up     1G     9216   swp       dgx04            48:b0:2d:4e:b8:f9  IP Address:                 10.1.", "start_char_idx": 3925, "end_char_idx": 5043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b86cf84-e7f7-41cc-8914-f868005e903d": {"__data__": {"id_": "5b86cf84-e7f7-41cc-8914-f868005e903d", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40d95983-9910-460e-aa69-099078e0ab7c", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "d19c6910a8d32c6789b06300562db5b84fe7505391db12e1087b45819cee8c49", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5a6e676-fbb3-4115-8e38-27a0ac75fac8", "node_type": "1", "metadata": {}, "hash": "6e88594f8fd6a765395fb0c3b80057d754ccce84b4225395a2fc0ef9496fcc04", "class_name": "RelatedNodeInfo"}}, "hash": "7db48dffe0f3066489d7e56de383889c9d8d38e7af78c854282fa8c9d55dee2d", "text": "1.1.49/31\nswp4s1          up     1G     9216   swp       dgx04            48:b0:2d:41:72:fe  IP Address:                 10.1.1.53/31\nswp4s2          up     1G     9216   swp       dgx04            48:b0:2d:27:eb:9d  IP Address:                 10.1.1.57/31\nswp4s3          up     1G     9216   swp       dgx04            48:b0:2d:4e:b8:f9  IP Address:                 10.1.1.61/31\nswp29s0         up     1G     9216   swp       ipmi01           swp49              IP Address:                10.150.0.0/31\nswp29s1         up     1G     9216   swp       ipmi02           swp49              IP Address:                10.150.0.2/31\nswp45           up     1G     9216   swp       edge01           swp1               IP Address:                10.140.0.0/31\nswp46           up     1G     9216   swp       edge02           swp1               IP Address:                10.140.0.2/31\nvlan121         up            9216   svi                                           IP Address:              10.130.121.2/24\nvlan121-v0      up            9216   svi                                           IP Address:              10.130.121.1/24\nvlan122         up            9216   svi                                           IP Address:              10.130.122.2/24\nvlan122-v0      up            9216   svi                                           IP Address:              10.130.122.1/24\n```\n**Note:** All ports are set to 1G speed as this demo runs on a virtual environment (Cumulus VX).", "start_char_idx": 4669, "end_char_idx": 6143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5a6e676-fbb3-4115-8e38-27a0ac75fac8": {"__data__": {"id_": "e5a6e676-fbb3-4115-8e38-27a0ac75fac8", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5b86cf84-e7f7-41cc-8914-f868005e903d", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "7db48dffe0f3066489d7e56de383889c9d8d38e7af78c854282fa8c9d55dee2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c6100cd-4c1e-41ee-bc5f-25908cf18760", "node_type": "1", "metadata": {}, "hash": "b0eafeda367b0ffaec0c8841f89d2ef75d9351f8785adf67ba5d57761a268de2", "class_name": "RelatedNodeInfo"}}, "hash": "6e88594f8fd6a765395fb0c3b80057d754ccce84b4225395a2fc0ef9496fcc04", "text": "140.0.0/31\nswp46           up     1G     9216   swp       edge02           swp1               IP Address:                10.140.0.2/31\nvlan121         up            9216   svi                                           IP Address:              10.130.121.2/24\nvlan121-v0      up            9216   svi                                           IP Address:              10.130.121.1/24\nvlan122         up            9216   svi                                           IP Address:              10.130.122.2/24\nvlan122-v0      up            9216   svi                                           IP Address:              10.130.122.1/24\n```\n**Note:** All ports are set to 1G speed as this demo runs on a virtual environment (Cumulus VX).\n\n\n## Global configuration\n\nTo ensure proper BasePOD configuration, we must enable these global configurations:\n- Lossless [RoCE](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-1-and-Switch-Ports/Quality-of-Service/RDMA-over-Converged-Ethernet-RoCE/)\n```bash\nnv set qos roce enable on\nnv set qos roce mode lossless\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show qos roce\n                    operational  applied\n------------------  -----------  --------\nenable                           on\nmode                lossless     lossless\ncongestion-control\n  congestion-mode   ECN\n  enabled-tc        0,3\n  max-threshold     1.43 MB\n  min-threshold     146.48 KB\n  probability       100\nlldp-app-tlv\n...\n...\n```\n- BGP and EVPN protocols\n```bash\nnv set router bgp enable on\nnv set evpn enable on\n```\nWe also enable [Graceful BGP Restart](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-3/Border-Gateway-Protocol-BGP/Optional-BGP-Configuration/#graceful-bgp-restart).", "start_char_idx": 5412, "end_char_idx": 7177, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c6100cd-4c1e-41ee-bc5f-25908cf18760": {"__data__": {"id_": "3c6100cd-4c1e-41ee-bc5f-25908cf18760", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5a6e676-fbb3-4115-8e38-27a0ac75fac8", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "6e88594f8fd6a765395fb0c3b80057d754ccce84b4225395a2fc0ef9496fcc04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3992ecaa-3006-49ad-b12b-8c01079db628", "node_type": "1", "metadata": {}, "hash": "87f29c62b0d97f6067b7b73c0dd78599dd27188d74a78a23a68193e1760a5207", "class_name": "RelatedNodeInfo"}}, "hash": "b0eafeda367b0ffaec0c8841f89d2ef75d9351f8785adf67ba5d57761a268de2", "text": "```bash\nnv set router bgp graceful-restart mode helper-only\n```\n- NVE interface and its parameters (ARP/ND suppress and tunnel source with loopback address)\n```bash\nnv set nve vxlan enable on\nnv set nve vxlan arp-np-suppress on\nnv set nve vxlan source address 10.10.10.1\n```\n\n## Routing policies\n\nWe use routing policies with IP-prefix lists and route-maps to precisely control the subnets\u2019 redistribution. Of course, in small-scale deployments such as BasePOD, this is less significant as we have a small number of routes, but as we follow the same guidelines for all deployments, we keep the policies here as well.\n\nThe first IP prefix-list is set to match all GPU (`/31`) subnets \n```bash\nnv set router policy prefix-list dgx_subnet rule 10 action permit\nnv set router policy prefix-list dgx_subnet rule 10 match 10.1.1.0/24 max-prefix-len 31\nnv set router policy prefix-list dgx_subnet type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy prefix-list dgx_subnet rule 10\n         applied\n-------  -----------\naction   permit\n[match]  10.1.1.0/24\n```\nThen this prefix-list is used within a route-map which will later be attached to the BGP `redistribute connected` statement into the `tenant1` VRF so that only those subnets will be injected as Type 5 routes into EVPN (BGP and EVPN configuration is covered later).", "start_char_idx": 7178, "end_char_idx": 8537, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3992ecaa-3006-49ad-b12b-8c01079db628": {"__data__": {"id_": "3992ecaa-3006-49ad-b12b-8c01079db628", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c6100cd-4c1e-41ee-bc5f-25908cf18760", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "b0eafeda367b0ffaec0c8841f89d2ef75d9351f8785adf67ba5d57761a268de2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b303a00-78dc-4162-a234-9008b27ebdf5", "node_type": "1", "metadata": {}, "hash": "3c77f87b7065e5ade2042e817be0e4b4942188a8639ac8eaa652ba1fbf65b6cf", "class_name": "RelatedNodeInfo"}}, "hash": "87f29c62b0d97f6067b7b73c0dd78599dd27188d74a78a23a68193e1760a5207", "text": "The first IP prefix-list is set to match all GPU (`/31`) subnets \n```bash\nnv set router policy prefix-list dgx_subnet rule 10 action permit\nnv set router policy prefix-list dgx_subnet rule 10 match 10.1.1.0/24 max-prefix-len 31\nnv set router policy prefix-list dgx_subnet type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy prefix-list dgx_subnet rule 10\n         applied\n-------  -----------\naction   permit\n[match]  10.1.1.0/24\n```\nThen this prefix-list is used within a route-map which will later be attached to the BGP `redistribute connected` statement into the `tenant1` VRF so that only those subnets will be injected as Type 5 routes into EVPN (BGP and EVPN configuration is covered later).\n```bash\nnv set router policy route-map dgx_subnets rule 10 action permit\nnv set router policy route-map dgx_subnets rule 10 description permit_dgx_subnet\nnv set router policy route-map dgx_subnets rule 10 match ip-prefix-list dgx_subnet\nnv set router policy route-map dgx_subnets rule 10 match type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy route-map dgx_subnets rule 10\n                  applied\n----------------  -----------------\nmatch\n  ip-prefix-list  dgx_subnet\n  type            ipv4\ndescription       permit_dgx_subnet\n```\nThe second IP prefix-list matches all inband management network subnets.", "start_char_idx": 7796, "end_char_idx": 9189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b303a00-78dc-4162-a234-9008b27ebdf5": {"__data__": {"id_": "9b303a00-78dc-4162-a234-9008b27ebdf5", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3992ecaa-3006-49ad-b12b-8c01079db628", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "87f29c62b0d97f6067b7b73c0dd78599dd27188d74a78a23a68193e1760a5207", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705", "node_type": "1", "metadata": {}, "hash": "ddbdb61cdbdf8d026bbd05602bcceb43d66826cfab12d36e52957bc981fa1474", "class_name": "RelatedNodeInfo"}}, "hash": "3c77f87b7065e5ade2042e817be0e4b4942188a8639ac8eaa652ba1fbf65b6cf", "text": "```bash\nnv set router policy route-map dgx_subnets rule 10 action permit\nnv set router policy route-map dgx_subnets rule 10 description permit_dgx_subnet\nnv set router policy route-map dgx_subnets rule 10 match ip-prefix-list dgx_subnet\nnv set router policy route-map dgx_subnets rule 10 match type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy route-map dgx_subnets rule 10\n                  applied\n----------------  -----------------\nmatch\n  ip-prefix-list  dgx_subnet\n  type            ipv4\ndescription       permit_dgx_subnet\n```\nThe second IP prefix-list matches all inband management network subnets.\n```bash\nnv set router policy prefix-list inband_subnets rule 10 action permit\nnv set router policy prefix-list inband_subnets rule 10 match 10.130.0.0/16 max-prefix-len 24\nnv set router policy prefix-list inband_subnets type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy prefix-list inband_subnets rule 10\n         applied\n-------  -------------\naction   permit\n[match]  10.130.0.0/16\n```\nThen, it is used within the route-map, which will be attached to the BGP `redistribute connected` statement into the `inband_storage` VRF.", "start_char_idx": 8538, "end_char_idx": 9761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705": {"__data__": {"id_": "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b303a00-78dc-4162-a234-9008b27ebdf5", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3c77f87b7065e5ade2042e817be0e4b4942188a8639ac8eaa652ba1fbf65b6cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec", "node_type": "1", "metadata": {}, "hash": "f3dcf87d5c43461fe34742a3464e8505881163de495f212453345930c17a0b3e", "class_name": "RelatedNodeInfo"}}, "hash": "ddbdb61cdbdf8d026bbd05602bcceb43d66826cfab12d36e52957bc981fa1474", "text": "```bash\nnv set router policy prefix-list inband_subnets rule 10 action permit\nnv set router policy prefix-list inband_subnets rule 10 match 10.130.0.0/16 max-prefix-len 24\nnv set router policy prefix-list inband_subnets type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy prefix-list inband_subnets rule 10\n         applied\n-------  -------------\naction   permit\n[match]  10.130.0.0/16\n```\nThen, it is used within the route-map, which will be attached to the BGP `redistribute connected` statement into the `inband_storage` VRF.\n```bash\nnv set router policy route-map inband_subnets rule 10 action permit\nnv set router policy route-map inband_subnets rule 10 description permit_dgx_subnet\nnv set router policy route-map inband_subnets rule 10 match ip-prefix-list inband_subnets\nnv set router policy route-map inband_subnets rule 10 match type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy route-map inband_subnets rule 10\n                  applied\n----------------  -----------------\nmatch\n  ip-prefix-list  inband_subnets\n  type            ipv4\ndescription       permit_dgx_subnet\n```\nAnd the 3rd route-map matches the lo interface (loopback IPv4 address). This route-map will be later attached to the BGP `redistribute connected` statement into the `default` VRF. This address will be used for the NVE tunnel over the underlay network.", "start_char_idx": 9190, "end_char_idx": 10615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec": {"__data__": {"id_": "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "ddbdb61cdbdf8d026bbd05602bcceb43d66826cfab12d36e52957bc981fa1474", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "db4f8216-3804-4266-99f6-36cc1e54d52a", "node_type": "1", "metadata": {}, "hash": "168163ee86d7a474a5874148fda55ad8137e3e61fb42a2ef397457d7b7a2cc93", "class_name": "RelatedNodeInfo"}}, "hash": "f3dcf87d5c43461fe34742a3464e8505881163de495f212453345930c17a0b3e", "text": "This route-map will be later attached to the BGP `redistribute connected` statement into the `default` VRF. This address will be used for the NVE tunnel over the underlay network.\n```bash\nnv set router policy route-map lo_subnet rule 10 action permit\nnv set router policy route-map lo_subnet rule 10 description permit_lo_subnet\nnv set router policy route-map lo_subnet rule 10 match interface lo\nnv set router policy route-map lo_subnet rule 10 match type ipv4\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show router policy route-map lo_subnet rule 10\n             applied\n-----------  ----------------\nmatch\n  interface  lo\n  type       ipv4\ndescription  permit_lo_subnet\n```\n**Note:** When setting up a multi-tenant environment, you will need more route-maps per tenant VRF.\n\n\n## BGP underlay network\n\nThe underlay network is set on the `default` VRF. Although the E/W and the N/S use EVPN in different flavors, this underlay will serve both networks. \n\nWe start with the basic BGP configuration on VRF `default` with the `ipv4` and `l2vpn-evpn` address-families, then the `redistribute connected` with the `lo_subnet` route-map attached.\n```bash\nnv set vrf default router bgp enable on\nnv set vrf default router bgp autonomous-system 65101\nnv set vrf default router bgp router-id 10.10.10.1\nnv set vrf default router bgp address-family ipv4-unicast enable on\nnv set vrf default router bgp address-family ipv4-unicast redistribute connected enable on\nnv set vrf default router bgp address-family ipv4-unicast redistribute connected route-map lo_subnet\nnv set vrf default router bgp address-family l2vpn-evpn enable on\n```\nThen, we set the BGP underlay neighbors (the inter-switch p2p links).", "start_char_idx": 10436, "end_char_idx": 12152, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "db4f8216-3804-4266-99f6-36cc1e54d52a": {"__data__": {"id_": "db4f8216-3804-4266-99f6-36cc1e54d52a", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f3dcf87d5c43461fe34742a3464e8505881163de495f212453345930c17a0b3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1042b26-a6ac-488e-84af-572128d72d73", "node_type": "1", "metadata": {}, "hash": "7ee44a899f21b0840d6895a58c4c7fc2e375f3889e42a39afd4e8feb60649119", "class_name": "RelatedNodeInfo"}}, "hash": "168163ee86d7a474a5874148fda55ad8137e3e61fb42a2ef397457d7b7a2cc93", "text": "We start with the basic BGP configuration on VRF `default` with the `ipv4` and `l2vpn-evpn` address-families, then the `redistribute connected` with the `lo_subnet` route-map attached.\n```bash\nnv set vrf default router bgp enable on\nnv set vrf default router bgp autonomous-system 65101\nnv set vrf default router bgp router-id 10.10.10.1\nnv set vrf default router bgp address-family ipv4-unicast enable on\nnv set vrf default router bgp address-family ipv4-unicast redistribute connected enable on\nnv set vrf default router bgp address-family ipv4-unicast redistribute connected route-map lo_subnet\nnv set vrf default router bgp address-family l2vpn-evpn enable on\n```\nThen, we set the BGP underlay neighbors (the inter-switch p2p links). Each neighbor has a `to-<peer switch>-<peer port>` description for easier troubleshooting, and all underlay neighbors are put within the `undelay` peer-group to set all BGP parameters on a single entity.  \n```bash\nnv set vrf default router bgp neighbor 172.16.1.29 description to-leaf02-swp61\nnv set vrf default router bgp neighbor 172.16.1.29 peer-group underlay\nnv set vrf default router bgp neighbor 172.16.1.29 type numbered\n...\nnv set vrf default router bgp neighbor 172.16.1.35 description to-leaf02-swp64\nnv set vrf default router bgp neighbor 172.16.1.35 peer-group underlay\nnv set vrf default router bgp neighbor 172.16.1.35 type numbered\n```\nThe peer-group is set with the `remote-as external` for eBGP, description, and a 3x300 [BFD](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-3/Bidirectional-Forwarding-Detection-BFD/) for faster port failures detection.", "start_char_idx": 11415, "end_char_idx": 13049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1042b26-a6ac-488e-84af-572128d72d73": {"__data__": {"id_": "a1042b26-a6ac-488e-84af-572128d72d73", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "db4f8216-3804-4266-99f6-36cc1e54d52a", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "168163ee86d7a474a5874148fda55ad8137e3e61fb42a2ef397457d7b7a2cc93", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "deef8052-e42a-4634-8e42-bc054b178309", "node_type": "1", "metadata": {}, "hash": "496511960f40b3d1bd94540b9c495c7c380fd698eb8ec78d37592ee38219263e", "class_name": "RelatedNodeInfo"}}, "hash": "7ee44a899f21b0840d6895a58c4c7fc2e375f3889e42a39afd4e8feb60649119", "text": "```bash\nnv set vrf default router bgp peer-group underlay remote-as external\nnv set vrf default router bgp peer-group underlay description underlay_interconnect\nnv set vrf default router bgp peer-group underlay bfd enable on\nnv set vrf default router bgp peer-group underlay bfd detect-multiplier 3\nnv set vrf default router bgp peer-group underlay bfd min-rx-interval 300\nnv set vrf default router bgp peer-group underlay bfd min-tx-interval 300\n```\n\n**Note:** All BGP neighbors we use in our deployments are numbered. We decided not to go with [BGP unnumbered](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-3/Border-Gateway-Protocol-BGP/#bgp-unnumbered) since it's harder to troubleshoot network issues when dealing with iPv6 link-local underlay addresses. This is less of a problem in small-scale deployments, but we follow the same designs for small-scale and scale-out deployments.", "start_char_idx": 13050, "end_char_idx": 13963, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "deef8052-e42a-4634-8e42-bc054b178309": {"__data__": {"id_": "deef8052-e42a-4634-8e42-bc054b178309", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1042b26-a6ac-488e-84af-572128d72d73", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "7ee44a899f21b0840d6895a58c4c7fc2e375f3889e42a39afd4e8feb60649119", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41611e49-96bf-484d-8cd4-1c1d3070c617", "node_type": "1", "metadata": {}, "hash": "d376989fcaf72376824f9ec9fd02cec503ee816fb16b62388423eab814b79f91", "class_name": "RelatedNodeInfo"}}, "hash": "496511960f40b3d1bd94540b9c495c7c380fd698eb8ec78d37592ee38219263e", "text": "We decided not to go with [BGP unnumbered](https://docs.nvidia.com/networking-ethernet-software/cumulus-linux/Layer-3/Border-Gateway-Protocol-BGP/#bgp-unnumbered) since it's harder to troubleshoot network issues when dealing with iPv6 link-local underlay addresses. This is less of a problem in small-scale deployments, but we follow the same designs for small-scale and scale-out deployments.\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf default router bgp neighbor brief\n\nAS - Remote Autonomous System, Afi-Safi - Address family, PfxSent - Transmitted\nprefix counter, PfxRcvd - Recieved prefix counter\n\nNeighbor     AS     State        Uptime    ResetTime  MsgRcvd  MsgSent  Afi-Safi      PfxSent  PfxRcvd\n-----------  -----  -----------  --------  ---------  -------  -------  ------------  -------  -------\n...\n172.16.1.29  65102  established  00:28:38  1722000    577      577      ipv4-unicast  2        1\n172.16.1.31  65102  established  00:28:38  1722000    577      577      ipv4-unicast  2        1\n172.16.1.33  65102  established  00:28:38  1722000    577      577      ipv4-unicast  2        1\n172.16.1.35  65102  established  00:28:38  1722000    577      577      ipv4-unicast  2        1\n```\n\n\n## BGP overlay network\n\nThe overlay network also runs on the `default` VRF. This network serves the NVE tunnels and both E/W and N/S networks.", "start_char_idx": 13570, "end_char_idx": 14948, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41611e49-96bf-484d-8cd4-1c1d3070c617": {"__data__": {"id_": "41611e49-96bf-484d-8cd4-1c1d3070c617", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "deef8052-e42a-4634-8e42-bc054b178309", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "496511960f40b3d1bd94540b9c495c7c380fd698eb8ec78d37592ee38219263e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "575654eb-82f6-4849-b9d2-f4fef51e28b6", "node_type": "1", "metadata": {}, "hash": "5c69945368fab6555c64f667b524346a47f783b38836b2ceb50e3f69856cec72", "class_name": "RelatedNodeInfo"}}, "hash": "d376989fcaf72376824f9ec9fd02cec503ee816fb16b62388423eab814b79f91", "text": "## BGP overlay network\n\nThe overlay network also runs on the `default` VRF. This network serves the NVE tunnels and both E/W and N/S networks. We intend to completely separate underlay and overlay networks and make the overlay more resilient to underlay link failures, so the overlay BGP peering is established between the switches\u2019 loopback interfaces and the `ipv4` address-family is **disabled** on it (only `l2vpn-evpn` is used for this peering). \n```bash\nnv set vrf default router bgp neighbor 10.10.10.2 description to-leaf02-loopback\nnv set vrf default router bgp neighbor 10.10.10.2 peer-group overlay\nnv set vrf default router bgp neighbor 10.10.10.2 type numbered\nnv set vrf default router bgp peer-group overlay address-family ipv4-unicast enable off\nnv set vrf default router bgp peer-group overlay address-family l2vpn-evpn enable on\n```\nThis BGP peering is set within the `overlay` peer-group with `remote-as external`, `update-source`, `multihop-ttl` configuration. The BFD is set with slightly slower timers as this session is more stable anyway.", "start_char_idx": 14806, "end_char_idx": 15868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "575654eb-82f6-4849-b9d2-f4fef51e28b6": {"__data__": {"id_": "575654eb-82f6-4849-b9d2-f4fef51e28b6", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41611e49-96bf-484d-8cd4-1c1d3070c617", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "d376989fcaf72376824f9ec9fd02cec503ee816fb16b62388423eab814b79f91", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "50b7359f-99e4-459e-ae17-3a229808ea86", "node_type": "1", "metadata": {}, "hash": "29fcf880d346816f4ef9de8161caff77f0f8477705beaa305da64634802ed0c0", "class_name": "RelatedNodeInfo"}}, "hash": "5c69945368fab6555c64f667b524346a47f783b38836b2ceb50e3f69856cec72", "text": "```bash\nnv set vrf default router bgp neighbor 10.10.10.2 description to-leaf02-loopback\nnv set vrf default router bgp neighbor 10.10.10.2 peer-group overlay\nnv set vrf default router bgp neighbor 10.10.10.2 type numbered\nnv set vrf default router bgp peer-group overlay address-family ipv4-unicast enable off\nnv set vrf default router bgp peer-group overlay address-family l2vpn-evpn enable on\n```\nThis BGP peering is set within the `overlay` peer-group with `remote-as external`, `update-source`, `multihop-ttl` configuration. The BFD is set with slightly slower timers as this session is more stable anyway.\n```bash\nnv set vrf default router bgp peer-group overlay remote-as external\nnv set vrf default router bgp peer-group overlay update-source lo\nnv set vrf default router bgp peer-group overlay multihop-ttl 2\nnv set vrf default router bgp peer-group overlay description overlay_interconnect\nnv set vrf default router bgp peer-group overlay bfd enable on\nnv set vrf default router bgp peer-group overlay bfd detect-multiplier 3\nnv set vrf default router bgp peer-group overlay bfd min-rx-interval 1000\nnv set vrf default router bgp peer-group overlay bfd min-tx-interval 1000\n```\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf default router bgp neighbor brief\n\nAS - Remote Autonomous System, Afi-Safi - Address family, PfxSent - Transmitted\nprefix counter, PfxRcvd - Recieved prefix counter\n\nNeighbor     AS     State        Uptime    ResetTime  MsgRcvd  MsgSent  Afi-Safi      PfxSent  PfxRcvd\n-----------  -----  -----------  --------  ---------  -------  -------  ------------  -------  -------\n10.10.10.2   65102  established  00:28:36  1722000    742      745      l2vpn-evpn    190      95\n...\n```\n\n## E/W network BGP configuration\n\nThe BasePOD is designed to be a multi-tenant environment, even though by default it is used as a single-tenant deployment.", "start_char_idx": 15258, "end_char_idx": 17151, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "50b7359f-99e4-459e-ae17-3a229808ea86": {"__data__": {"id_": "50b7359f-99e4-459e-ae17-3a229808ea86", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "575654eb-82f6-4849-b9d2-f4fef51e28b6", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "5c69945368fab6555c64f667b524346a47f783b38836b2ceb50e3f69856cec72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed34c44d-6205-457b-829d-6501b4bd604a", "node_type": "1", "metadata": {}, "hash": "4e261e70feaeb61c37f35ba4efef62e278ff665667a5f160089beff6fc1bd104", "class_name": "RelatedNodeInfo"}}, "hash": "29fcf880d346816f4ef9de8161caff77f0f8477705beaa305da64634802ed0c0", "text": "All the VXLAN, BGP, and EVPN configuration we made so far is to provide an infrastructure for that. The initial state of the configuration for the E/W network is a single-tenant running on VRF `tenant1`. \n\nFirst, we must add the relevant GPU ports to the tenant VRF - `tenant1`.\n```bash\nnv set interface swp1s0-3,swp2s0-3,swp3s0-3,swp4s0-3 ip vrf tenant1\n```\nThen, to create the `tenant1` control-plane and routing configuration, we create a BGP instance for this VRF with all related global parameters \u2013 the `remote-as`, `router-id`, `ipv4`, and `l2vpn-evpn` address-families and statically set the route distinguisher (`rd`) for the VRF.\n```bash\nnv set vrf tenant1 router bgp enable on\nnv set vrf tenant1 router bgp autonomous-system 65101\nnv set vrf tenant1 router bgp router-id 10.10.10.1\nnv set vrf tenant1 router bgp rd 10.10.10.1:4001\nnv set vrf tenant1 router bgp address-family ipv4-unicast enable on\nnv set vrf tenant1 router bgp address-family l2vpn-evpn enable on\n```\n**Note:** We set static `rd` so that the format for each future created VRF will be the same, and it will be easier to troubleshoot.\n\nTo reduce route advertisements, we set the SN5600 switches to advertise a single summary route. We aggregate all GPU subnets with an `/24` subnet with an `aggregate-route` configuration. Then, we set a `summary-only` setting so that no specific routes will be advertised alongside the summary route. Again, this is less significant in small-scale deployments such as BasePOD but sufficient for scale-out.\n```bash\nnv set vrf tenant1 router bgp address-family ipv4-unicast aggregate-route 10.1.1.0/24 summary-only on\n```\nAs mentioned earlier, the E/W network is based on pure EVPN Type 5 routes.", "start_char_idx": 17152, "end_char_idx": 18859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed34c44d-6205-457b-829d-6501b4bd604a": {"__data__": {"id_": "ed34c44d-6205-457b-829d-6501b4bd604a", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50b7359f-99e4-459e-ae17-3a229808ea86", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "29fcf880d346816f4ef9de8161caff77f0f8477705beaa305da64634802ed0c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a668ebf0-43ea-498f-be1c-ec545f571191", "node_type": "1", "metadata": {}, "hash": "348e54890fbc6c9d5b8eef43aca63332784fde8417869b671d2aa8a4a78da9dc", "class_name": "RelatedNodeInfo"}}, "hash": "4e261e70feaeb61c37f35ba4efef62e278ff665667a5f160089beff6fc1bd104", "text": "To reduce route advertisements, we set the SN5600 switches to advertise a single summary route. We aggregate all GPU subnets with an `/24` subnet with an `aggregate-route` configuration. Then, we set a `summary-only` setting so that no specific routes will be advertised alongside the summary route. Again, this is less significant in small-scale deployments such as BasePOD but sufficient for scale-out.\n```bash\nnv set vrf tenant1 router bgp address-family ipv4-unicast aggregate-route 10.1.1.0/24 summary-only on\n```\nAs mentioned earlier, the E/W network is based on pure EVPN Type 5 routes. So, we use the `redistribute connected` statement with the previously created `dgx_subnets` route-map to insert only the GPU subnets into the `tenant1` VRF. To make all the redistributed GPU subnets EVPN Type 5 routes, we export them into EVPN using the `route-export to-evpn` configuration.\n```bash\nnv set vrf tenant1 router bgp address-family ipv4-unicast redistribute connected enable on\nnv set vrf tenant1 router bgp address-family ipv4-unicast redistribute connected route-map dgx_subnets\nnv set vrf tenant1 router bgp address-family ipv4-unicast route-export to-evpn enable on\n```\nFinally, we enable EVPN protocol on the VRF and assign a L3VNI. \n```bash\nnv set vrf tenant1 evpn enable on\nnv set vrf tenant1 evpn vni 4001\n```\n**Note:** For multi-tenancy, add the appropriate GPU ports to the tenant VRF and create a BGP instance using the same method described above.\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 router rib\nAddress-family  Summary\n--------------  -------------------\nipv4            Route:    0.0.0.0/0\n                Route:  10.1.1.0/24\n                Route:  10.1.1.0/31\n                Route: 10.1.1.10/31\n                Route: 10.", "start_char_idx": 18266, "end_char_idx": 20054, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a668ebf0-43ea-498f-be1c-ec545f571191": {"__data__": {"id_": "a668ebf0-43ea-498f-be1c-ec545f571191", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed34c44d-6205-457b-829d-6501b4bd604a", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "4e261e70feaeb61c37f35ba4efef62e278ff665667a5f160089beff6fc1bd104", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45e357dd-66ac-4221-a6e6-16afb959138e", "node_type": "1", "metadata": {}, "hash": "56938316dc781ef3d3f4de29582ec907d184cfb9a025be696537c594e386beb7", "class_name": "RelatedNodeInfo"}}, "hash": "348e54890fbc6c9d5b8eef43aca63332784fde8417869b671d2aa8a4a78da9dc", "text": "```bash\nnv set vrf tenant1 evpn enable on\nnv set vrf tenant1 evpn vni 4001\n```\n**Note:** For multi-tenancy, add the appropriate GPU ports to the tenant VRF and create a BGP instance using the same method described above.\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 router rib\nAddress-family  Summary\n--------------  -------------------\nipv4            Route:    0.0.0.0/0\n                Route:  10.1.1.0/24\n                Route:  10.1.1.0/31\n                Route: 10.1.1.10/31\n                Route: 10.1.1.12/31\n                Route: 10.1.1.14/31\n                Route: 10.1.1.16/31\n                Route: 10.1.1.18/31\n                Route:  10.1.1.2/31\n                Route: 10.1.1.20/31\n                Route: 10.1.1.22/31\n                Route: 10.1.1.24/31\n                Route: 10.1.1.26/31\n                Route: 10.1.1.28/31\n                Route: 10.1.1.30/31\n                Route: 10.1.1.32/31\n                Route: 10.1.1.34/31\n                Route: 10.1.1.36/31\n                Route: 10.1.1.38/31\n                Route:  10.1.1.4/31\n                Route: 10.1.1.40/31\n                Route: 10.1.1.42/31\n                Route: 10.1.1.44/31\n                Route: 10.1.1.46/31\n                Route: 10.1.1.48/31\n                Route: 10.1.1.50/31\n                Route: 10.", "start_char_idx": 19512, "end_char_idx": 20846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45e357dd-66ac-4221-a6e6-16afb959138e": {"__data__": {"id_": "45e357dd-66ac-4221-a6e6-16afb959138e", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a668ebf0-43ea-498f-be1c-ec545f571191", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "348e54890fbc6c9d5b8eef43aca63332784fde8417869b671d2aa8a4a78da9dc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79c18bf9-7be8-4c89-8580-8873d5ce5d47", "node_type": "1", "metadata": {}, "hash": "93fb10ce93a71dc9c7887363494250427c968e0f4e0756eebc7103ef332aa3bc", "class_name": "RelatedNodeInfo"}}, "hash": "56938316dc781ef3d3f4de29582ec907d184cfb9a025be696537c594e386beb7", "text": "1.1.26/31\n                Route: 10.1.1.28/31\n                Route: 10.1.1.30/31\n                Route: 10.1.1.32/31\n                Route: 10.1.1.34/31\n                Route: 10.1.1.36/31\n                Route: 10.1.1.38/31\n                Route:  10.1.1.4/31\n                Route: 10.1.1.40/31\n                Route: 10.1.1.42/31\n                Route: 10.1.1.44/31\n                Route: 10.1.1.46/31\n                Route: 10.1.1.48/31\n                Route: 10.1.1.50/31\n                Route: 10.1.1.52/31\n                Route: 10.1.1.54/31\n                Route: 10.1.1.56/31\n                Route: 10.1.1.58/31\n                Route:  10.1.1.6/31\n                Route: 10.1.1.60/31\n                Route: 10.1.1.62/31\n                Route:  10.1.1.8/31\nipv6            Route:         ::/0\n                Route:    fe80::/64\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 router rib ipv4 route\nRoute         Protocol   Distance  ResolvedVia  ResolvedViaIntf  Uptime    NHGId  Metric  TableId  Flags\n------------  ---------  --------  -----------  ---------------  --------  -----  ------  -------  ------------\n0.0.0.0/0     kernel     255       reject                        00:34:42  1      8192    1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n10.1.1.", "start_char_idx": 20342, "end_char_idx": 21810, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79c18bf9-7be8-4c89-8580-8873d5ce5d47": {"__data__": {"id_": "79c18bf9-7be8-4c89-8580-8873d5ce5d47", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45e357dd-66ac-4221-a6e6-16afb959138e", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "56938316dc781ef3d3f4de29582ec907d184cfb9a025be696537c594e386beb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c1a3dce-48ee-484c-9e3f-936fb6bbc530", "node_type": "1", "metadata": {}, "hash": "0c85f2b2f8538900d57744877e57c2c00abb43a4824064832b75ea46eb62ca16", "class_name": "RelatedNodeInfo"}}, "hash": "93fb10ce93a71dc9c7887363494250427c968e0f4e0756eebc7103ef332aa3bc", "text": "1.6/31\n                Route: 10.1.1.60/31\n                Route: 10.1.1.62/31\n                Route:  10.1.1.8/31\nipv6            Route:         ::/0\n                Route:    fe80::/64\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 router rib ipv4 route\nRoute         Protocol   Distance  ResolvedVia  ResolvedViaIntf  Uptime    NHGId  Metric  TableId  Flags\n------------  ---------  --------  -----------  ---------------  --------  -----  ------  -------  ------------\n0.0.0.0/0     kernel     255       reject                        00:34:42  1      8192    1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n10.1.1.0/24   bgp        200       blackhole                     00:34:40  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n10.1.1.0/31   connected  0         swp1s0                        00:34:42  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   offloaded\n                                                                                                   selected\n10.1.1.2/31   bgp        20        10.10.10.2   vlan700_l3       00:34:38  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n10.1.1.4/31   connected  0         swp1s1                        00:34:42  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   offloaded\n                                                                                                   selected\n10.1.1.6/31   bgp        20        10.10.10.2   vlan700_l3       00:34:38  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n.\n.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c1a3dce-48ee-484c-9e3f-936fb6bbc530": {"__data__": {"id_": "5c1a3dce-48ee-484c-9e3f-936fb6bbc530", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79c18bf9-7be8-4c89-8580-8873d5ce5d47", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "93fb10ce93a71dc9c7887363494250427c968e0f4e0756eebc7103ef332aa3bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7dc97500-76c2-4e3b-8404-7ed09c9abd21", "node_type": "1", "metadata": {}, "hash": "5fef4196f0f9f86fa957814c2d5788cca4c620e4b7d026e69579d37d8f152f2b", "class_name": "RelatedNodeInfo"}}, "hash": "0c85f2b2f8538900d57744877e57c2c00abb43a4824064832b75ea46eb62ca16", "text": "1.1.2/31   bgp        20        10.10.10.2   vlan700_l3       00:34:38  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n10.1.1.4/31   connected  0         swp1s1                        00:34:42  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   offloaded\n                                                                                                   selected\n10.1.1.6/31   bgp        20        10.10.10.2   vlan700_l3       00:34:38  1      0       1003     fib-selected\n                                                                                                   installed\n                                                                                                   selected\n.\n.\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 evpn bgp-info\n                       operational        applied\n---------------------  -----------------  -------\nlocal-vtep             10.10.10.1\nrd                     10.10.10.1:4001\nrouter-mac             48:b0:2d:a4:de:e3\nsystem-ip              10.10.10.1\nsystem-mac             48:b0:2d:a4:de:e3\n[export-route-target]  65101:4001\n[import-route-target]  65101:4001\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf tenant1 router bgp address-family l2vpn-evpn loc-rib rd 10.10.10.2:4001 route-type 5\nroute\n========\n                    ethernet-tag  evpn-prefix-str           ip         mac  path-count  prefix        Summary\n    --------------  ------------  ------------------------  ---------  ---  ----------  ------------  --------------------\n    0+10.1.1.0/24   0             [5]:[0]:[24]:[10.1.1.0]   10.1.1.0        1           10.1.1.0/24   Neighbor: 10.10.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dc97500-76c2-4e3b-8404-7ed09c9abd21": {"__data__": {"id_": "7dc97500-76c2-4e3b-8404-7ed09c9abd21", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c1a3dce-48ee-484c-9e3f-936fb6bbc530", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "0c85f2b2f8538900d57744877e57c2c00abb43a4824064832b75ea46eb62ca16", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "021f2e40-b5bd-412a-9075-1039603c74ac", "node_type": "1", "metadata": {}, "hash": "d37c032224e9dd5138c3a5e422774323a63a36a42f0f425f2dc0dc98937b3fff", "class_name": "RelatedNodeInfo"}}, "hash": "5fef4196f0f9f86fa957814c2d5788cca4c620e4b7d026e69579d37d8f152f2b", "text": "10.10.2:4001 route-type 5\nroute\n========\n                    ethernet-tag  evpn-prefix-str           ip         mac  path-count  prefix        Summary\n    --------------  ------------  ------------------------  ---------  ---  ----------  ------------  --------------------\n    0+10.1.1.0/24   0             [5]:[0]:[24]:[10.1.1.0]   10.1.1.0        1           10.1.1.0/24   Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.2/31   0             [5]:[0]:[31]:[10.1.1.2]   10.1.1.2        1           10.1.1.2/31   Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.6/31   0             [5]:[0]:[31]:[10.1.1.6]   10.1.1.6        1           10.1.1.6/31   Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.10/31  0             [5]:[0]:[31]:[10.1.1.10]  10.1.1.10       1           10.1.1.10/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.14/31  0             [5]:[0]:[31]:[10.1.1.14]  10.1.1.14       1           10.1.1.14/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.18/31  0             [5]:[0]:[31]:[10.", "start_char_idx": 24206, "end_char_idx": 25761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "021f2e40-b5bd-412a-9075-1039603c74ac": {"__data__": {"id_": "021f2e40-b5bd-412a-9075-1039603c74ac", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7dc97500-76c2-4e3b-8404-7ed09c9abd21", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "5fef4196f0f9f86fa957814c2d5788cca4c620e4b7d026e69579d37d8f152f2b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9461ee6-b4c8-4914-8892-ffc28f1efa87", "node_type": "1", "metadata": {}, "hash": "5a221eabc9d1d78dc3016e6129776d5a2228df5a76b578295668a6dbe0e772c7", "class_name": "RelatedNodeInfo"}}, "hash": "d37c032224e9dd5138c3a5e422774323a63a36a42f0f425f2dc0dc98937b3fff", "text": "10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.10/31  0             [5]:[0]:[31]:[10.1.1.10]  10.1.1.10       1           10.1.1.10/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.14/31  0             [5]:[0]:[31]:[10.1.1.14]  10.1.1.14       1           10.1.1.14/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.18/31  0             [5]:[0]:[31]:[10.1.1.18]  10.1.1.18       1           10.1.1.18/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.22/31  0             [5]:[0]:[31]:[10.1.1.22]  10.1.1.22       1           10.1.1.22/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.26/31  0             [5]:[0]:[31]:[10.1.1.26]  10.1.1.26       1           10.1.1.26/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.30/31  0             [5]:[0]:[31]:[10.1.1.30]  10.1.1.30       1           10.1.1.30/31  Neighbor: 10.10.10.", "start_char_idx": 25087, "end_char_idx": 26569, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9461ee6-b4c8-4914-8892-ffc28f1efa87": {"__data__": {"id_": "a9461ee6-b4c8-4914-8892-ffc28f1efa87", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "021f2e40-b5bd-412a-9075-1039603c74ac", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "d37c032224e9dd5138c3a5e422774323a63a36a42f0f425f2dc0dc98937b3fff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cad97ae-c532-4819-ac46-77a64c6fc9ba", "node_type": "1", "metadata": {}, "hash": "1345d76e928727a47df9577fa68614610e50d696a3d5dfc692125be5027925b7", "class_name": "RelatedNodeInfo"}}, "hash": "5a221eabc9d1d78dc3016e6129776d5a2228df5a76b578295668a6dbe0e772c7", "text": "1.1.22]  10.1.1.22       1           10.1.1.22/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.26/31  0             [5]:[0]:[31]:[10.1.1.26]  10.1.1.26       1           10.1.1.26/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.30/31  0             [5]:[0]:[31]:[10.1.1.30]  10.1.1.30       1           10.1.1.30/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.34/31  0             [5]:[0]:[31]:[10.1.1.34]  10.1.1.34       1           10.1.1.34/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.38/31  0             [5]:[0]:[31]:[10.1.1.38]  10.1.1.38       1           10.1.1.38/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.42/31  0             [5]:[0]:[31]:[10.1.1.42]  10.1.1.42       1           10.1.1.42/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.46/31  0             [5]:[0]:[31]:[10.1.1.", "start_char_idx": 26007, "end_char_idx": 27487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1cad97ae-c532-4819-ac46-77a64c6fc9ba": {"__data__": {"id_": "1cad97ae-c532-4819-ac46-77a64c6fc9ba", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9461ee6-b4c8-4914-8892-ffc28f1efa87", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "5a221eabc9d1d78dc3016e6129776d5a2228df5a76b578295668a6dbe0e772c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "779a4091-94ef-4ab8-9a55-a11d68d6d34f", "node_type": "1", "metadata": {}, "hash": "63116278a816259528b90f529c48bcd72de3aeb2e9e85eed6d7a147aaa11d880", "class_name": "RelatedNodeInfo"}}, "hash": "1345d76e928727a47df9577fa68614610e50d696a3d5dfc692125be5027925b7", "text": "2\n                                                                                                      Path:              1\n    0+10.1.1.38/31  0             [5]:[0]:[31]:[10.1.1.38]  10.1.1.38       1           10.1.1.38/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.42/31  0             [5]:[0]:[31]:[10.1.1.42]  10.1.1.42       1           10.1.1.42/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.46/31  0             [5]:[0]:[31]:[10.1.1.46]  10.1.1.46       1           10.1.1.46/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.50/31  0             [5]:[0]:[31]:[10.1.1.50]  10.1.1.50       1           10.1.1.50/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.54/31  0             [5]:[0]:[31]:[10.1.1.54]  10.1.1.54       1           10.1.1.54/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.58/31  0             [5]:[0]:[31]:[10.1.1.58]  10.1.1.58       1           10.1.1.58/31  Neighbor: 10.10.10.", "start_char_idx": 26815, "end_char_idx": 28291, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "779a4091-94ef-4ab8-9a55-a11d68d6d34f": {"__data__": {"id_": "779a4091-94ef-4ab8-9a55-a11d68d6d34f", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cad97ae-c532-4819-ac46-77a64c6fc9ba", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "1345d76e928727a47df9577fa68614610e50d696a3d5dfc692125be5027925b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b", "node_type": "1", "metadata": {}, "hash": "22b117cd45d915f8c751b69ec6e75c2048c644c5b1839ed0ab091776b3127cf6", "class_name": "RelatedNodeInfo"}}, "hash": "63116278a816259528b90f529c48bcd72de3aeb2e9e85eed6d7a147aaa11d880", "text": "1.1.50]  10.1.1.50       1           10.1.1.50/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.54/31  0             [5]:[0]:[31]:[10.1.1.54]  10.1.1.54       1           10.1.1.54/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.58/31  0             [5]:[0]:[31]:[10.1.1.58]  10.1.1.58       1           10.1.1.58/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n    0+10.1.1.62/31  0             [5]:[0]:[31]:[10.1.1.62]  10.1.1.62       1           10.1.1.62/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n```\n\n## N/S network layer 2 configuration\n\nAs we already know, the N/S network must support layer 2 for the DGX management, BCM, k8s, and storage nodes. To enable layer 2, we create bridge domain `br_default` and set VLAN-to-VNI mapping for the EVPN-MH that will be set later for this network.  \n```bash\nnv set bridge domain br_default type vlan-aware\nnv set bridge domain br_default vlan 121 vni 121\nnv set bridge domain br_default vlan 122 vni 122\n```\nThen we set all switchports to the required bridge mode and assign them to the needed VLANs. BCM nodes require two layer 2 ports each to the SN5600 switches, which must be set as `access` (untagged) ports.", "start_char_idx": 27729, "end_char_idx": 29321, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b": {"__data__": {"id_": "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "779a4091-94ef-4ab8-9a55-a11d68d6d34f", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "63116278a816259528b90f529c48bcd72de3aeb2e9e85eed6d7a147aaa11d880", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e", "node_type": "1", "metadata": {}, "hash": "3207226343aa6ae25bfbba8048ae7ef36581343bccb34a26ba838f24650101b8", "class_name": "RelatedNodeInfo"}}, "hash": "22b117cd45d915f8c751b69ec6e75c2048c644c5b1839ed0ab091776b3127cf6", "text": "1.62/31  Neighbor: 10.10.10.2\n                                                                                                      Path:              1\n```\n\n## N/S network layer 2 configuration\n\nAs we already know, the N/S network must support layer 2 for the DGX management, BCM, k8s, and storage nodes. To enable layer 2, we create bridge domain `br_default` and set VLAN-to-VNI mapping for the EVPN-MH that will be set later for this network.  \n```bash\nnv set bridge domain br_default type vlan-aware\nnv set bridge domain br_default vlan 121 vni 121\nnv set bridge domain br_default vlan 122 vni 122\n```\nThen we set all switchports to the required bridge mode and assign them to the needed VLANs. BCM nodes require two layer 2 ports each to the SN5600 switches, which must be set as `access` (untagged) ports. In our example, these are `VLAN121` and `VLAN122` (BCM requires two different subnets - `internal` and `external`).\n```bash\nnv set interface swp30s0 bridge domain br_default access 121\nnv set interface swp30s1 bridge domain br_default access 122\n```\nThe rest of the nodes (DGX, k8s, and storage) are connected using active-active (LACP) bonds to both SN5600 switches. Those bonds are set with the general bonding configuration - `mtu`, `stp`, `lacp-bypass`, etc.", "start_char_idx": 28509, "end_char_idx": 29784, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e": {"__data__": {"id_": "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "22b117cd45d915f8c751b69ec6e75c2048c644c5b1839ed0ab091776b3127cf6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd", "node_type": "1", "metadata": {}, "hash": "40ac109e59e982c95e8f6a45d90222c3d6e33e2b081744ba5d5aa00cb414f5df", "class_name": "RelatedNodeInfo"}}, "hash": "3207226343aa6ae25bfbba8048ae7ef36581343bccb34a26ba838f24650101b8", "text": "BCM nodes require two layer 2 ports each to the SN5600 switches, which must be set as `access` (untagged) ports. In our example, these are `VLAN121` and `VLAN122` (BCM requires two different subnets - `internal` and `external`).\n```bash\nnv set interface swp30s0 bridge domain br_default access 121\nnv set interface swp30s1 bridge domain br_default access 122\n```\nThe rest of the nodes (DGX, k8s, and storage) are connected using active-active (LACP) bonds to both SN5600 switches. Those bonds are set with the general bonding configuration - `mtu`, `stp`, `lacp-bypass`, etc.\n```bash\nnv set interface bond1 bond member swp17s0\nnv set interface bond1 description to-dgx01\nnv set interface bond2 bond member swp17s1\nnv set interface bond2 description to-dgx02\n...\nnv set interface bond5 bond member swp31s0\nnv set interface bond5 description to-k8s01\n...\nnv set interface bond9 bond member swp34\nnv set interface bond9 description to-storage02\n...\nnv set interface bond1-9 link mtu 9216\nnv set interface bond1-9 type bond\nnv set interface bond1-9 bond lacp-bypass on\nnv set interface bond1-9 bond mode lacp\nnv set interface bond1-9 bridge domain br_default stp admin-edge on\nnv set interface bond1-9 bridge domain br_default stp auto-edge on\nnv set interface bond1-9 bridge domain br_default stp bpdu-guard on\n```\nThen, they are set as trunk ports with all VLANs allowed. Their native (untagged) VALN is the inband-mgmt. and storage subnet VLAN - `VLAN122`.", "start_char_idx": 29209, "end_char_idx": 30664, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd": {"__data__": {"id_": "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3207226343aa6ae25bfbba8048ae7ef36581343bccb34a26ba838f24650101b8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4000d400-2c86-4931-8753-0de5d7940f03", "node_type": "1", "metadata": {}, "hash": "343e2b691b5cd44ad5ca5d54da33332b1533cf9ea573e51c7f44b59ccbf2ee47", "class_name": "RelatedNodeInfo"}}, "hash": "40ac109e59e982c95e8f6a45d90222c3d6e33e2b081744ba5d5aa00cb414f5df", "text": "Their native (untagged) VALN is the inband-mgmt. and storage subnet VLAN - `VLAN122`.\n```bash\nnv set interface bond1-9 bridge domain br_default untagged 122\nnv set interface bond1-9 bridge domain br_default vlan all\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show bridge domain br_default port\nport     flags                                         state\n-------  --------------------------------------------  ----------\nbond1    flood,learning,mcast_flood                    forwarding\nbond2    flood,learning,mcast_flood                    forwarding\nbond3    flood,learning,mcast_flood                    forwarding\nbond4    flood,learning,mcast_flood                    forwarding\nbond5    flood,learning,mcast_flood                    forwarding\nbond6    flood,learning,mcast_flood                    forwarding\nbond7    flood,learning,mcast_flood                    forwarding\nbond8    flood,learning,mcast_flood                    forwarding\nbond9    flood,learning,mcast_flood                    forwarding\nswp30s0  flood,learning,mcast_flood                    forwarding\nswp30s1  flood,learning,mcast_flood                    forwarding\nvxlan48  flood,vlan_tunnel,neigh_suppress,mcast_flood  forwarding\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show bridge domain br_default stp port bond1\nenabled         : yes         admin-edge-port      : yes\nrestricted-tcn  : no          bpdu-guard-port      : yes\nrestricted-role : no          bpdu-guard-error     : no\nport-path-cost  : 20000       bpdu-filter-port     : no\noper-edge-port  : yes         ba-inconsistent      : no\nnetwork-port    : no          auto-edge-port       : yes\nmcheck          : no          admin-port-path-cost : 0\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show bridge domain br_default vlan\n     multicast.snooping.querier.source-ip  ptp.enable  Summary\n---  ------------------------------------  ----------  --------\n121  0.0.0.", "start_char_idx": 30579, "end_char_idx": 32504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4000d400-2c86-4931-8753-0de5d7940f03": {"__data__": {"id_": "4000d400-2c86-4931-8753-0de5d7940f03", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "40ac109e59e982c95e8f6a45d90222c3d6e33e2b081744ba5d5aa00cb414f5df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1", "node_type": "1", "metadata": {}, "hash": "cc047a3dd6f5675222a469e1ce0e8481131bbcb030a3ee4c1dbdd15c64df0283", "class_name": "RelatedNodeInfo"}}, "hash": "343e2b691b5cd44ad5ca5d54da33332b1533cf9ea573e51c7f44b59ccbf2ee47", "text": "neigh_suppress,mcast_flood  forwarding\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show bridge domain br_default stp port bond1\nenabled         : yes         admin-edge-port      : yes\nrestricted-tcn  : no          bpdu-guard-port      : yes\nrestricted-role : no          bpdu-guard-error     : no\nport-path-cost  : 20000       bpdu-filter-port     : no\noper-edge-port  : yes         ba-inconsistent      : no\nnetwork-port    : no          auto-edge-port       : yes\nmcheck          : no          admin-port-path-cost : 0\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show bridge domain br_default vlan\n     multicast.snooping.querier.source-ip  ptp.enable  Summary\n---  ------------------------------------  ----------  --------\n121  0.0.0.0                               off         vni: 121\n122  0.0.0.0                               off         vni: 122\n```\n\n## N/S network EVPN-MH configuration\n\nTo provide a standard active-active (and multi-tenant) N/S network without the need for MLAG, we use EVPN-MH. For that, we enable the `evpn multihoming` protocol globally, configure its `startup-delay`, and statically set the L2VNI `rds`.\n```bash\nnv set evpn multihoming enable on\nnv set evpn multihoming startup-delay 10\nnv set evpn vni 121 rd 10.10.10.1:121\nnv set evpn vni 122 rd 10.10.10.1:122\n```\n**Note:** We set static `rd` so that the format for each L2VNI created later will always be the same, and it will be easier to troubleshoot.\n\nEach bond has its own unique local multihoming segment identifier.", "start_char_idx": 31777, "end_char_idx": 33274, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1": {"__data__": {"id_": "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4000d400-2c86-4931-8753-0de5d7940f03", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "343e2b691b5cd44ad5ca5d54da33332b1533cf9ea573e51c7f44b59ccbf2ee47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c", "node_type": "1", "metadata": {}, "hash": "b2e634b074df222c59a62837c95271bda984dabf87c6bedd511401b23ab92bb9", "class_name": "RelatedNodeInfo"}}, "hash": "cc047a3dd6f5675222a469e1ce0e8481131bbcb030a3ee4c1dbdd15c64df0283", "text": "we use EVPN-MH. For that, we enable the `evpn multihoming` protocol globally, configure its `startup-delay`, and statically set the L2VNI `rds`.\n```bash\nnv set evpn multihoming enable on\nnv set evpn multihoming startup-delay 10\nnv set evpn vni 121 rd 10.10.10.1:121\nnv set evpn vni 122 rd 10.10.10.1:122\n```\n**Note:** We set static `rd` so that the format for each L2VNI created later will always be the same, and it will be easier to troubleshoot.\n\nEach bond has its own unique local multihoming segment identifier.\n```bash\nnv set interface bond1 evpn multihoming segment local-id 1\nnv set interface bond2 evpn multihoming segment local-id 2\n...\nnv set interface bond9 evpn multihoming segment local-id 9\n```\nThe rest of the EVPN-MH bond parameters are identical for all bonds. Only one of the MH switches should be set with `segment df-preference`.\n```bash\nnv set interface bond1-9 evpn multihoming segment enable on\nnv set interface bond1-9 evpn multihoming segment df-preference 50000\nnv set interface bond1-9 evpn multihoming segment mac-address 44:38:39:BE:EF:AA\n```\nThe inter-switch layer 3 ports will serve as the EVPN-MH uplinks.", "start_char_idx": 32758, "end_char_idx": 33896, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c": {"__data__": {"id_": "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "cc047a3dd6f5675222a469e1ce0e8481131bbcb030a3ee4c1dbdd15c64df0283", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "32fc4b5d-22c4-4106-8b52-a097d90726e4", "node_type": "1", "metadata": {}, "hash": "f7fa478c16006d06df4bdd8c9d3bcda1622e9cd68dfb300952bfc2716c660997", "class_name": "RelatedNodeInfo"}}, "hash": "b2e634b074df222c59a62837c95271bda984dabf87c6bedd511401b23ab92bb9", "text": "Each bond has its own unique local multihoming segment identifier.\n```bash\nnv set interface bond1 evpn multihoming segment local-id 1\nnv set interface bond2 evpn multihoming segment local-id 2\n...\nnv set interface bond9 evpn multihoming segment local-id 9\n```\nThe rest of the EVPN-MH bond parameters are identical for all bonds. Only one of the MH switches should be set with `segment df-preference`.\n```bash\nnv set interface bond1-9 evpn multihoming segment enable on\nnv set interface bond1-9 evpn multihoming segment df-preference 50000\nnv set interface bond1-9 evpn multihoming segment mac-address 44:38:39:BE:EF:AA\n```\nThe inter-switch layer 3 ports will serve as the EVPN-MH uplinks.\n```bash\nnv set interface swp61-64 evpn multihoming uplink on\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show evpn vni\n\nNumMacs - Number of MACs (local and remote) known for this VNI, NumArps - Number\nof ARPs (IPv4 and IPv6, local and remote) known for this VNI\n, NumRemVteps - Number of Remote Vteps\n\nVNI  NumMacs  NumArps  NumRemVteps  TenantVrf\n---  -------  -------  -----------  --------------\n121  4        2        1            inband_storage\n122  30       10       1            inband_storage\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show interface bond1 evpn multihoming segment\n               operational  applied\n-------------  -----------  -----------------\nenable                      on\ndf-preference               50000\nlocal-id                    1\nmac-address                 44:38:39:BE:EF:AA\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show evpn access-vlan-info vlan 122\n                        operational  applied\n----------------------  -----------  -------\nmember-interface-count  9\nvni                     122\nvni-count               1\nvxlan-interface         vxlan48\n\nmember-interface\n===================\n    -----\n    bond1\n    bond2\n    bond3\n    bond4\n    bond5\n    bond6\n    bond7\n    bond8\n    bond9\n```\n\n## N/S network VRR configuration\n\nTo enable the N/S layer 2 network route outside the BasePOD (or between subnets within it), we set gateways to the VLANs (`VLAN121` and `VLAN122`).", "start_char_idx": 33208, "end_char_idx": 35328, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32fc4b5d-22c4-4106-8b52-a097d90726e4": {"__data__": {"id_": "32fc4b5d-22c4-4106-8b52-a097d90726e4", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "b2e634b074df222c59a62837c95271bda984dabf87c6bedd511401b23ab92bb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f88d9687-896b-42d6-a429-4ffe2a0e16b5", "node_type": "1", "metadata": {}, "hash": "ddaee7a1d7859ec7321ba71ba8588ae85854c128c0f10ce18ab29185d99bcc6e", "class_name": "RelatedNodeInfo"}}, "hash": "f7fa478c16006d06df4bdd8c9d3bcda1622e9cd68dfb300952bfc2716c660997", "text": "To provide an active-active and redundant gateway, we use VRR. \n```bash\nnv set router vrr enable on\n```\nEach VLAN has a virtual-IP and virtual-MAC addresses that will be used as the subnet gateways. We use typical VRR configuration with an SVI and virtual addresses.\n```bash\nnv set interface vlan121 vlan 121\nnv set interface vlan121 ip address 10.130.121.2/24\nnv set interface vlan121 ip vrr address 10.130.121.1/24\nnv set interface vlan121 ip vrr mac-address 00:00:00:00:01:21\nnv set interface vlan122 vlan 122\nnv set interface vlan122 ip address 10.130.122.2/24\nnv set interface vlan122 ip vrr address 10.130.122.1/24\nnv set interface vlan122 ip vrr mac-address 00:00:00:00:01:22\nnv set interface vlan121-122 type svi\nnv set interface vlan121-122 ip vrr enable on\nnv set interface vlan121-122 ip vrr state up\n```\nThose SVIs then must be within the N/S netowork `inband_storage` VRF.\n```bash\nnv set interface vlan121-122 ip vrf inband_storage\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show interface vlan122 ip vrr\n             operational               applied\n-----------  ------------------------  -----------------\nenable                                 on\nmac-address  00:00:00:00:01:22         00:00:00:00:01:22\nmac-id                                 none\n[address]    10.130.122.1/24           10.130.122.1/24\n[address]    fe80::200:ff:fe00:122/64\nstate        up  \n```\n\n\n## N/S network BGP configuration\n\nThe N/S network BGP configuration is similar to the E/W (single-tenant).", "start_char_idx": 35329, "end_char_idx": 36841, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f88d9687-896b-42d6-a429-4ffe2a0e16b5": {"__data__": {"id_": "f88d9687-896b-42d6-a429-4ffe2a0e16b5", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "32fc4b5d-22c4-4106-8b52-a097d90726e4", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f7fa478c16006d06df4bdd8c9d3bcda1622e9cd68dfb300952bfc2716c660997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14aa3228-86a7-4e9c-805f-59cb93f8a5b3", "node_type": "1", "metadata": {}, "hash": "f0fea035d504139ccc9c5d25c6bbef87ac8c3575dd02d227322f5db3d49dc55f", "class_name": "RelatedNodeInfo"}}, "hash": "ddaee7a1d7859ec7321ba71ba8588ae85854c128c0f10ce18ab29185d99bcc6e", "text": "```bash\nnv set interface vlan121-122 ip vrf inband_storage\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show interface vlan122 ip vrr\n             operational               applied\n-----------  ------------------------  -----------------\nenable                                 on\nmac-address  00:00:00:00:01:22         00:00:00:00:01:22\nmac-id                                 none\n[address]    10.130.122.1/24           10.130.122.1/24\n[address]    fe80::200:ff:fe00:122/64\nstate        up  \n```\n\n\n## N/S network BGP configuration\n\nThe N/S network BGP configuration is similar to the E/W (single-tenant). It runs on VRF `inband_storage`, and to enable its control-plane and routing, we create a separate BGP instance for this VRF with all related global parameters \u2013 the `remote-as`, `router-id`, `ipv4`, and `l2vpn-evpn` address-families and statically set the route distinguisher (`rd`) for the VRF.\n```bash\nnv set vrf inband_storage router bgp enable on\nnv set vrf inband_storage router bgp autonomous-system 65101\nnv set vrf inband_storage router bgp router-id 10.10.10.1\nnv set vrf inband_storage router bgp rd 10.10.10.1:4000\nnv set vrf inband_storage router bgp address-family ipv4-unicast enable on\nnv set vrf inband_storage router bgp address-family l2vpn-evpn enable on\n```\n**Note:** We set static `rd` so that the format for each future create VRF will always be the same, and it will be easier to troubleshoot.\n\nWe set a single summary route for this VRF to reduce route advertisements to the data center. We aggregate all inband subnets (in our case, a single subnet) with an `/16` prefix. Then, we set a `summary-only` configuration so no specific routes will be advertised alongside the summary route.", "start_char_idx": 36215, "end_char_idx": 37953, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "14aa3228-86a7-4e9c-805f-59cb93f8a5b3": {"__data__": {"id_": "14aa3228-86a7-4e9c-805f-59cb93f8a5b3", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f88d9687-896b-42d6-a429-4ffe2a0e16b5", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "ddaee7a1d7859ec7321ba71ba8588ae85854c128c0f10ce18ab29185d99bcc6e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36befdc9-7ed7-4c70-a2b1-9803ec49b625", "node_type": "1", "metadata": {}, "hash": "09167eb6ee6bc567284e2bf28ead19d1b90995669a2b6b5754bf94bd929caaed", "class_name": "RelatedNodeInfo"}}, "hash": "f0fea035d504139ccc9c5d25c6bbef87ac8c3575dd02d227322f5db3d49dc55f", "text": "We set a single summary route for this VRF to reduce route advertisements to the data center. We aggregate all inband subnets (in our case, a single subnet) with an `/16` prefix. Then, we set a `summary-only` configuration so no specific routes will be advertised alongside the summary route. \n```bash\nnv set vrf inband_storage router bgp address-family ipv4-unicast aggregate-route 10.130.0.0/16 summary-only on\n```\nThen, we use the `redistribute connected` statement with the previously created `inband_subnets` route-map to insert only the inband subnets into the `inband_storage` VRF (no loopback, uplinks, etc.). \n```bash\nnv set vrf inband_storage router bgp address-family ipv4-unicast redistribute connected enable on\nnv set vrf inband_storage router bgp address-family ipv4-unicast redistribute connected route-map inband_subnets\n```\nFinally, we enable EVPN protocol on the VRF and assign a L3VNI. \n```bash\nnv set vrf inband_storage evpn enable on\nnv set vrf inband_storage evpn vni 4000\n```\n**Note:** For multi-tenancy, create a BGP instance for each tenant VRF using the same method and add the appropriate SVIs.", "start_char_idx": 37661, "end_char_idx": 38783, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "36befdc9-7ed7-4c70-a2b1-9803ec49b625": {"__data__": {"id_": "36befdc9-7ed7-4c70-a2b1-9803ec49b625", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "14aa3228-86a7-4e9c-805f-59cb93f8a5b3", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f0fea035d504139ccc9c5d25c6bbef87ac8c3575dd02d227322f5db3d49dc55f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64ab280d-94bb-4961-8a97-3989da18abb4", "node_type": "1", "metadata": {}, "hash": "f3edf0897b9fa0756c0f07e305fdf6325b6a8dea1fd519b07d875ac7040f889f", "class_name": "RelatedNodeInfo"}}, "hash": "09167eb6ee6bc567284e2bf28ead19d1b90995669a2b6b5754bf94bd929caaed", "text": "```bash\nnv set vrf inband_storage router bgp address-family ipv4-unicast redistribute connected enable on\nnv set vrf inband_storage router bgp address-family ipv4-unicast redistribute connected route-map inband_subnets\n```\nFinally, we enable EVPN protocol on the VRF and assign a L3VNI. \n```bash\nnv set vrf inband_storage evpn enable on\nnv set vrf inband_storage evpn vni 4000\n```\n**Note:** For multi-tenancy, create a BGP instance for each tenant VRF using the same method and add the appropriate SVIs.\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router rib ipv4 route\nRoute            Protocol   Distance  ResolvedVia  ResolvedViaIntf  Uptime    NHGId  Metric  TableId  Flags\n---------------  ---------  --------  -----------  ---------------  --------  -----  ------  -------  ------------\n...\n10.130.0.0/16    bgp        200       blackhole                     01:12:42  1      0       1002     fib-selected\n...\n...\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage evpn bgp-info\n                       operational        applied\n---------------------  -----------------  -------\nlocal-vtep             10.10.10.1\nrd                     10.10.10.1:4000\nrouter-mac             48:b0:2d:a4:de:e3\nsystem-ip              10.10.10.1\nsystem-mac             48:b0:2d:a4:de:e3\n[export-route-target]  65101:4000\n[import-route-target]  65101:4000\n```\n\n## IPMI and edge networks configuration\n\nEach of the SN5600 switches has four additional router ports. Two for IPMI switches uplinks, and two for the edge switches connection. In this demo, the IP addresses for those ports are also based on a p2p (`/31`).", "start_char_idx": 38280, "end_char_idx": 39936, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64ab280d-94bb-4961-8a97-3989da18abb4": {"__data__": {"id_": "64ab280d-94bb-4961-8a97-3989da18abb4", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36befdc9-7ed7-4c70-a2b1-9803ec49b625", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "09167eb6ee6bc567284e2bf28ead19d1b90995669a2b6b5754bf94bd929caaed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b0730c2-b62b-4ab2-abde-d71579a1c70c", "node_type": "1", "metadata": {}, "hash": "a580a8324dba64c4ede6656176547f05d95233c6cdaccf9b81d822cd9e022fb2", "class_name": "RelatedNodeInfo"}}, "hash": "f3edf0897b9fa0756c0f07e305fdf6325b6a8dea1fd519b07d875ac7040f889f", "text": "Two for IPMI switches uplinks, and two for the edge switches connection. In this demo, the IP addresses for those ports are also based on a p2p (`/31`).\n\nTo IPMI:\n```bash\nnv set interface swp29s0 ip address 10.150.0.0/31\nnv set interface swp29s1 ip address 10.150.0.2/31\n```\nTo edge:\n```bash\nnv set interface swp45 ip address 10.140.0.0/31\nnv set interface swp46 ip address 10.140.0.2/31\n```\nAll these port subnets are within the `inband_storage` VRF as the N/S and the OOB-mgmt. networks must be accessible from the data center.\n```bash\nnv set interface swp29s0-1,swp45-46 ip vrf inband_storage\n```\nThen, within the `inband_storage` VRF BGP instance, sessions are established over those links to the IPMI and edge switches. \n```bash\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 description to-edge01-swp1\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 peer-group ipmi_edge\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 type numbered\n...\n...\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 description to-ipmi02-swp49\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 peer-group ipmi_edge\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 type numbered\n```\nWe put these neighbors into a separate `ipmi_edge` peer-group and set `remote-as`, description, and BFD parameters.", "start_char_idx": 39784, "end_char_idx": 41112, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b0730c2-b62b-4ab2-abde-d71579a1c70c": {"__data__": {"id_": "6b0730c2-b62b-4ab2-abde-d71579a1c70c", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64ab280d-94bb-4961-8a97-3989da18abb4", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f3edf0897b9fa0756c0f07e305fdf6325b6a8dea1fd519b07d875ac7040f889f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3e2b51b-992e-477f-bf0e-a1e156a9a608", "node_type": "1", "metadata": {}, "hash": "f397e6f8ec6f5530c6c0ae9beba4e4a045d34253cf0fa88279cf87684d23390b", "class_name": "RelatedNodeInfo"}}, "hash": "a580a8324dba64c4ede6656176547f05d95233c6cdaccf9b81d822cd9e022fb2", "text": "```bash\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 description to-edge01-swp1\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 peer-group ipmi_edge\nnv set vrf inband_storage router bgp neighbor 10.140.0.1 type numbered\n...\n...\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 description to-ipmi02-swp49\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 peer-group ipmi_edge\nnv set vrf inband_storage router bgp neighbor 10.150.0.3 type numbered\n```\nWe put these neighbors into a separate `ipmi_edge` peer-group and set `remote-as`, description, and BFD parameters.\n```bash\nnv set vrf inband_storage router bgp peer-group ipmi_edge remote-as external\nnv set vrf inband_storage router bgp peer-group ipmi_edge description ipmi_edge_interconnect\nnv set vrf inband_storage router bgp peer-group ipmi_edge bfd enable on\nnv set vrf inband_storage router bgp peer-group ipmi_edge bfd detect-multiplier 3\nnv set vrf inband_storage router bgp peer-group ipmi_edge bfd min-rx-interval 300\nnv set vrf inband_storage router bgp peer-group ipmi_edge bfd min-tx-interval 300\n```\n\nConfiguration verification:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router bgp neighbor\n\nAS - Remote Autonomous System, Afi-Safi - Address family, PfxSent - Transmitted\nprefix counter, PfxRcvd - Recieved prefix counter\n\nNeighbor    AS     State        Uptime    ResetTime  MsgRcvd  MsgSent  Afi-Safi      PfxSent  PfxRcvd\n----------  -----  -----------  --------  ---------  -------  -------  ------------  -------  -------\n10.140.0.", "start_char_idx": 40510, "end_char_idx": 42065, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c3e2b51b-992e-477f-bf0e-a1e156a9a608": {"__data__": {"id_": "c3e2b51b-992e-477f-bf0e-a1e156a9a608", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b0730c2-b62b-4ab2-abde-d71579a1c70c", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "a580a8324dba64c4ede6656176547f05d95233c6cdaccf9b81d822cd9e022fb2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7c9eba51-e4d3-490a-844d-c85337f46fdb", "node_type": "1", "metadata": {}, "hash": "5117e234abbea480a182f823b7f1e85394ae74dd732aba9a847c18bac6997dc1", "class_name": "RelatedNodeInfo"}}, "hash": "f397e6f8ec6f5530c6c0ae9beba4e4a045d34253cf0fa88279cf87684d23390b", "text": "Afi-Safi - Address family, PfxSent - Transmitted\nprefix counter, PfxRcvd - Recieved prefix counter\n\nNeighbor    AS     State        Uptime    ResetTime  MsgRcvd  MsgSent  Afi-Safi      PfxSent  PfxRcvd\n----------  -----  -----------  --------  ---------  -------  -------  ------------  -------  -------\n10.140.0.1  65106  established  10:51:15  48056000   13030    13063    ipv4-unicast  3        1\n10.140.0.3  65107  established  10:51:15  48056000   13030    13031    ipv4-unicast  3        1\n10.150.0.1  65104  established  11:06:45  48056000   13341    13341    ipv4-unicast  3        1\n10.150.0.3  65105  established  11:06:45  48056000   13340    13341    ipv4-unicast  3        1\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router rib\nAddress-family  Summary\n--------------  ----------------------\nipv4            Route:       0.0.0.0/0\n                Route: 10.100.100.0/32\n                Route:   10.130.0.0/16\n                Route: 10.130.121.0/24\n                Route: 10.130.122.0/24\n                Route:   10.140.0.0/31\n                Route:   10.140.0.2/31\n                Route:   10.150.0.0/31\n                Route:   10.150.0.2/31\n                Route: 10.200.200.", "start_char_idx": 41752, "end_char_idx": 42961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c9eba51-e4d3-490a-844d-c85337f46fdb": {"__data__": {"id_": "7c9eba51-e4d3-490a-844d-c85337f46fdb", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3e2b51b-992e-477f-bf0e-a1e156a9a608", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "f397e6f8ec6f5530c6c0ae9beba4e4a045d34253cf0fa88279cf87684d23390b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a012c734-0d63-42ab-8c52-cfa9788c168b", "node_type": "1", "metadata": {}, "hash": "9a6c701b10b7071d1da758f73ffd893190bb0d164a7d5d054507440215f258b9", "class_name": "RelatedNodeInfo"}}, "hash": "5117e234abbea480a182f823b7f1e85394ae74dd732aba9a847c18bac6997dc1", "text": "0.0.0/0\n                Route: 10.100.100.0/32\n                Route:   10.130.0.0/16\n                Route: 10.130.121.0/24\n                Route: 10.130.122.0/24\n                Route:   10.140.0.0/31\n                Route:   10.140.0.2/31\n                Route:   10.150.0.0/31\n                Route:   10.150.0.2/31\n                Route: 10.200.200.0/32\nipv6            Route:            ::/0\n                Route:       fe80::/64\n```\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router rib ipv4 route\nRoute            Protocol   Distance  ResolvedVia  ResolvedViaIntf  Uptime    NHGId  Metric  TableId  Flags\n---------------  ---------  --------  -----------  ---------------  --------  -----  ------  -------  ------------\n.\n10.100.100.0/32  bgp        20        10.150.0.1   swp29s0          01:12:20  2      0       1002     fib-selected\n                                      10.150.0.3   swp29s1                                            installed\n                                                                                                      selected\n.\n.\n10.200.200.0/32  bgp        20        10.140.0.1   swp45            01:12:00  2      0       1002     fib-selected\n                                      10.140.0.3   swp46                                              installed\n                                                                                                      selected\n```\n**Note:** In this demo, we only simulate IPMI and data center networks by redistributing their switches\u2019 loopback addresses into the BasePOD N/S network.\n\nTo ensure both uplinks (for IPMI and edge) are used to route traffic, we use the `multipath aspath-ignore` setting as both peers use different ASNs.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a012c734-0d63-42ab-8c52-cfa9788c168b": {"__data__": {"id_": "a012c734-0d63-42ab-8c52-cfa9788c168b", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7c9eba51-e4d3-490a-844d-c85337f46fdb", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "5117e234abbea480a182f823b7f1e85394ae74dd732aba9a847c18bac6997dc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bccc5b86-5791-4799-9085-afabf787c01f", "node_type": "1", "metadata": {}, "hash": "8deeafb1160b70c3905ecd4fb5f5b84455b6e8767867f2b26a7561a04fba7d2e", "class_name": "RelatedNodeInfo"}}, "hash": "9a6c701b10b7071d1da758f73ffd893190bb0d164a7d5d054507440215f258b9", "text": "0.1   swp29s0          01:12:20  2      0       1002     fib-selected\n                                      10.150.0.3   swp29s1                                            installed\n                                                                                                      selected\n.\n.\n10.200.200.0/32  bgp        20        10.140.0.1   swp45            01:12:00  2      0       1002     fib-selected\n                                      10.140.0.3   swp46                                              installed\n                                                                                                      selected\n```\n**Note:** In this demo, we only simulate IPMI and data center networks by redistributing their switches\u2019 loopback addresses into the BasePOD N/S network.\n\nTo ensure both uplinks (for IPMI and edge) are used to route traffic, we use the `multipath aspath-ignore` setting as both peers use different ASNs.\n```bash\nnv set vrf inband_storage router bgp path-selection multipath aspath-ignore on\n```\nConfiguration verification:\n\nIPMI subent:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router rib ipv4 route 10.100.100.0/32  \nprotocol\n===========\n    Protocol  EntryIdx  TblId  NHGId  Distance  Metric  ResolvedViaIntf  Weight  ResolvedViaInfo\n    --------  --------  -----  -----  --------  ------  ---------------  ------  ---------------\n    bgp       1         1002   2      20        0       swp29s0          1\n                                                        swp29s1          1\n```\nEdge (DC) subnet:\n```bash\ncumulus@leaf01:mgmt:~$ nv show vrf inband_storage router rib ipv4 route 10.200.200.0/32\nprotocol\n===========\n    Protocol  EntryIdx  TblId  NHGId  Distance  Metric  ResolvedViaIntf  Weight  ResolvedViaInfo\n    --------  --------  -----  -----  --------  ------  ---------------  ------  ---------------\n    bgp       1         1002   2      20        0       swp45            1\n                                                        swp46            1\n```", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bccc5b86-5791-4799-9085-afabf787c01f": {"__data__": {"id_": "bccc5b86-5791-4799-9085-afabf787c01f", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a012c734-0d63-42ab-8c52-cfa9788c168b", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "9a6c701b10b7071d1da758f73ffd893190bb0d164a7d5d054507440215f258b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dd2ad97-5276-48be-9a6a-182576fd0ecf", "node_type": "1", "metadata": {}, "hash": "31ec4e967f593dbe940bed70b9ef9fab330e43eefd1393ef7363d42dd87a8b82", "class_name": "RelatedNodeInfo"}}, "hash": "8deeafb1160b70c3905ecd4fb5f5b84455b6e8767867f2b26a7561a04fba7d2e", "text": "## E/W and N/S networks connectivity test\n\nTo test E/W network all-to-all GPU connectivity, we placed a bash script named `ping_test.sh` on the `dgx01` node. This script sends 2 ICMP packets using the ping command to all DGX NICs with the source of each of the `dgx01` NICs.\n\nRun the script to verify E/W all-to-all connectivity.\n```bash\nubuntu@dgx01:~$ ./ping_test.sh\nPING 10.1.1.0 (10.1.1.0) from 10.1.1.0 : 56(84) bytes of data.\n64 bytes from 10.1.1.0: icmp_seq=1 ttl=64 time=0.016 ms\n64 bytes from 10.1.1.0: icmp_seq=2 ttl=64 time=0.038 ms\n\n--- 10.1.1.0 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1025ms\nrtt min/avg/max/mdev = 0.016/0.027/0.038/0.011 ms\nPing result from 10.1.1.0 to 10.1.1.0: 0\nPING 10.1.1.0 (10.1.1.0) from 10.1.1.2 : 56(84) bytes of data.", "start_char_idx": 45432, "end_char_idx": 46226, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9dd2ad97-5276-48be-9a6a-182576fd0ecf": {"__data__": {"id_": "9dd2ad97-5276-48be-9a6a-182576fd0ecf", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bccc5b86-5791-4799-9085-afabf787c01f", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "8deeafb1160b70c3905ecd4fb5f5b84455b6e8767867f2b26a7561a04fba7d2e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75a84c79-fd3c-493a-8899-331e811e5789", "node_type": "1", "metadata": {}, "hash": "d90362543e1457fc90929309d812df4cbf2e024e89e2b74c3ec0ea39b406fdde", "class_name": "RelatedNodeInfo"}}, "hash": "31ec4e967f593dbe940bed70b9ef9fab330e43eefd1393ef7363d42dd87a8b82", "text": "64 bytes from 10.1.1.0: icmp_seq=1 ttl=64 time=0.016 ms\n64 bytes from 10.1.1.0: icmp_seq=2 ttl=64 time=0.038 ms\n\n--- 10.1.1.0 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1025ms\nrtt min/avg/max/mdev = 0.016/0.027/0.038/0.011 ms\nPing result from 10.1.1.0 to 10.1.1.0: 0\nPING 10.1.1.0 (10.1.1.0) from 10.1.1.2 : 56(84) bytes of data.\n64 bytes from 10.1.1.0: icmp_seq=1 ttl=64 time=0.085 ms\n64 bytes from 10.1.1.0: icmp_seq=2 ttl=64 time=0.039 ms\n\n--- 10.1.1.0 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1021ms\nrtt min/avg/max/mdev = 0.039/0.062/0.085/0.023 ms\nPing result from 10.1.1.2 to 10.1.1.0: 0\nPING 10.1.1.0 (10.1.1.0) from 10.1.1.4 : 56(84) bytes of data.\n64 bytes from 10.1.1.0: icmp_seq=1 ttl=64 time=0.011 ms\n64 bytes from 10.1.1.0: icmp_seq=2 ttl=64 time=0.039 ms\n...\n...\n```\nEnsure there is no connectivity between the E/W and the N/S networks - the GPU NICs in `tenant1` VRF to the nodes in `inband_storage` VRF.", "start_char_idx": 45864, "end_char_idx": 46852, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75a84c79-fd3c-493a-8899-331e811e5789": {"__data__": {"id_": "75a84c79-fd3c-493a-8899-331e811e5789", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dd2ad97-5276-48be-9a6a-182576fd0ecf", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "31ec4e967f593dbe940bed70b9ef9fab330e43eefd1393ef7363d42dd87a8b82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a3db896-ddcd-4aec-9a4a-b2335299fcef", "node_type": "1", "metadata": {}, "hash": "c52dcb852d98e892e05652740c1927dea6747c63de790d95ff70b4955652b774", "class_name": "RelatedNodeInfo"}}, "hash": "d90362543e1457fc90929309d812df4cbf2e024e89e2b74c3ec0ea39b406fdde", "text": "64 bytes from 10.1.1.0: icmp_seq=1 ttl=64 time=0.011 ms\n64 bytes from 10.1.1.0: icmp_seq=2 ttl=64 time=0.039 ms\n...\n...\n```\nEnsure there is no connectivity between the E/W and the N/S networks - the GPU NICs in `tenant1` VRF to the nodes in `inband_storage` VRF.\n```bash\nubuntu@dgx01:~$ ping 10.130.122.25 -I 10.1.1.0 -c 3\nPING 10.130.122.25 (10.130.122.25) from 10.1.1.0 : 56(84) bytes of data.\n\n--- 10.130.122.25 ping statistics ---\n3 packets transmitted, 0 received, 100% packet loss, time 2034ms\n\nubuntu@dgx01:~$ ping 10.130.122.101 -I 10.1.1.2 -c 3\nPING 10.130.122.101 (10.130.122.101) from 10.1.1.2 : 56(84) bytes of data.\n\n--- 10.130.122.101 ping statistics ---\n3 packets transmitted, 0 received, 100% packet loss, time 2026ms\n```\n\nA similar script (`./ping_test.sh`) is also placed on the `bcm01` node. By running it, verify all-to-all N/S network connectivity within the `inband_storage` VRF.\n```bash\nubuntu@bcm01:~$ ./ping_test.sh\nPING 10.130.122.254 (10.130.122.254) from 10.130.122.254 : 56(84) bytes of data.", "start_char_idx": 46590, "end_char_idx": 47611, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a3db896-ddcd-4aec-9a4a-b2335299fcef": {"__data__": {"id_": "5a3db896-ddcd-4aec-9a4a-b2335299fcef", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75a84c79-fd3c-493a-8899-331e811e5789", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "d90362543e1457fc90929309d812df4cbf2e024e89e2b74c3ec0ea39b406fdde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d53d9c8-456e-4c02-8955-40a5e6ef90d5", "node_type": "1", "metadata": {}, "hash": "7efbcf0a07fbe601c4eca36c1db46a2bbce80111581e4d19c11fcb1396adb711", "class_name": "RelatedNodeInfo"}}, "hash": "c52dcb852d98e892e05652740c1927dea6747c63de790d95ff70b4955652b774", "text": "--- 10.130.122.101 ping statistics ---\n3 packets transmitted, 0 received, 100% packet loss, time 2026ms\n```\n\nA similar script (`./ping_test.sh`) is also placed on the `bcm01` node. By running it, verify all-to-all N/S network connectivity within the `inband_storage` VRF.\n```bash\nubuntu@bcm01:~$ ./ping_test.sh\nPING 10.130.122.254 (10.130.122.254) from 10.130.122.254 : 56(84) bytes of data.\n64 bytes from 10.130.122.254: icmp_seq=1 ttl=64 time=0.077 ms\n64 bytes from 10.130.122.254: icmp_seq=2 ttl=64 time=0.043 ms\n\n--- 10.130.122.254 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1016ms\nrtt min/avg/max/mdev = 0.043/0.060/0.077/0.017 ms\nPing result from 10.130.122.254 to 10.130.122.254: 0\nPING 10.130.122.253 (10.130.122.253) from 10.130.122.254 : 56(84) bytes of data.\n64 bytes from 10.130.122.253: icmp_seq=1 ttl=64 time=2.84 ms\n64 bytes from 10.130.122.253: icmp_seq=2 ttl=64 time=1.52 ms\n\n--- 10.130.122.253 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 1.523/2.182/2.841/0.659 ms\nPing result from 10.130.122.254 to 10.130.122.253: 0\nPING 10.130.122.5 (10.130.122.5) from 10.130.122.254 : 56(84) bytes of data.", "start_char_idx": 47220, "end_char_idx": 48427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d53d9c8-456e-4c02-8955-40a5e6ef90d5": {"__data__": {"id_": "5d53d9c8-456e-4c02-8955-40a5e6ef90d5", "embedding": null, "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3bb937be-2ba1-4a21-ba30-be6d16dfb84d", "node_type": "4", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "3518b5c5bd49181f3f7c9e62232bc6c1c87d04c38c5f0a1a76fcb4d95be0b592", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a3db896-ddcd-4aec-9a4a-b2335299fcef", "node_type": "1", "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}, "hash": "c52dcb852d98e892e05652740c1927dea6747c63de790d95ff70b4955652b774", "class_name": "RelatedNodeInfo"}}, "hash": "7efbcf0a07fbe601c4eca36c1db46a2bbce80111581e4d19c11fcb1396adb711", "text": "64 bytes from 10.130.122.253: icmp_seq=1 ttl=64 time=2.84 ms\n64 bytes from 10.130.122.253: icmp_seq=2 ttl=64 time=1.52 ms\n\n--- 10.130.122.253 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 1.523/2.182/2.841/0.659 ms\nPing result from 10.130.122.254 to 10.130.122.253: 0\nPING 10.130.122.5 (10.130.122.5) from 10.130.122.254 : 56(84) bytes of data.\n64 bytes from 10.130.122.5: icmp_seq=1 ttl=64 time=1.53 ms\n64 bytes from 10.130.122.5: icmp_seq=2 ttl=64 time=0.894 ms\n...\n...\n```\n\n\n## Demo configuration recovery\n\nIf you made configuration changes to the demo environment and wish to revert all to the initial state, you can use the `basepod_config.yml` ansible-playbook located in the `cumulus_ansible_modules` folder on the `oob-mgmt-server`.\n```bash\nubuntu@oob-mgmt-server:~$ cd cumulus_ansible_modules\nubuntu@oob-mgmt-server:~/cumulus_ansible_modules$ ansible-playbook playbooks/basepod_config.yml -i inventories/rail_optimized/hosts\n```\n\nTHE END.", "start_char_idx": 48023, "end_char_idx": 49030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"3bb937be-2ba1-4a21-ba30-be6d16dfb84d": {"node_ids": ["01bfb9ad-c667-4680-84f9-1eb128dea9a9", "5f6ce9ad-4135-4a35-a12b-b985c9f354da", "b7394295-f2e6-447b-b535-c8a627109c45", "4aa9adb9-f18a-4db6-90ac-8eb69f0a3755", "40d95983-9910-460e-aa69-099078e0ab7c", "5b86cf84-e7f7-41cc-8914-f868005e903d", "e5a6e676-fbb3-4115-8e38-27a0ac75fac8", "3c6100cd-4c1e-41ee-bc5f-25908cf18760", "3992ecaa-3006-49ad-b12b-8c01079db628", "9b303a00-78dc-4162-a234-9008b27ebdf5", "b5ad47d7-ed4d-4f8b-8883-96a2a26ff705", "a38134b7-e0cc-4cc7-b64b-e52e27e4fbec", "db4f8216-3804-4266-99f6-36cc1e54d52a", "a1042b26-a6ac-488e-84af-572128d72d73", "deef8052-e42a-4634-8e42-bc054b178309", "41611e49-96bf-484d-8cd4-1c1d3070c617", "575654eb-82f6-4849-b9d2-f4fef51e28b6", "50b7359f-99e4-459e-ae17-3a229808ea86", "ed34c44d-6205-457b-829d-6501b4bd604a", "a668ebf0-43ea-498f-be1c-ec545f571191", "45e357dd-66ac-4221-a6e6-16afb959138e", "79c18bf9-7be8-4c89-8580-8873d5ce5d47", "5c1a3dce-48ee-484c-9e3f-936fb6bbc530", "7dc97500-76c2-4e3b-8404-7ed09c9abd21", "021f2e40-b5bd-412a-9075-1039603c74ac", "a9461ee6-b4c8-4914-8892-ffc28f1efa87", "1cad97ae-c532-4819-ac46-77a64c6fc9ba", "779a4091-94ef-4ab8-9a55-a11d68d6d34f", "686a0c7d-c5e9-4564-83d0-8fbf545c5c3b", "fe2130f6-374c-41c7-bb4e-bf3f8b5ea03e", "3e6b0c98-723c-43e5-a3a1-d7b2dab6f5bd", "4000d400-2c86-4931-8753-0de5d7940f03", "0f71f514-8bbd-4a90-846f-0d8e6d20a8c1", "b92cc9cc-a8bc-4e4a-9d3b-19e317a8722c", "32fc4b5d-22c4-4106-8b52-a097d90726e4", "f88d9687-896b-42d6-a429-4ffe2a0e16b5", "14aa3228-86a7-4e9c-805f-59cb93f8a5b3", "36befdc9-7ed7-4c70-a2b1-9803ec49b625", "64ab280d-94bb-4961-8a97-3989da18abb4", "6b0730c2-b62b-4ab2-abde-d71579a1c70c", "c3e2b51b-992e-477f-bf0e-a1e156a9a608", "7c9eba51-e4d3-490a-844d-c85337f46fdb", "a012c734-0d63-42ab-8c52-cfa9788c168b", "bccc5b86-5791-4799-9085-afabf787c01f", "9dd2ad97-5276-48be-9a6a-182576fd0ecf", "75a84c79-fd3c-493a-8899-331e811e5789", "5a3db896-ddcd-4aec-9a4a-b2335299fcef", "5d53d9c8-456e-4c02-8955-40a5e6ef90d5"], "metadata": {"filename": "C:\\Users\\RayBe\\AppData\\Local\\NVIDIA\\ChatWithRTX\\RAG\\trt-llm-rag-windows-main\\dataset\\nvidiaBasePod.txt"}}}}